{"env_info": "sys.platform: linux\nPython: 3.8.11 (default, Jul  3 2021, 17:53:42) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2080 Ti\nCUDA_HOME: /apps/cuda/cuda-11.0-cudnn8.0\nNVCC: \nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.5.5\nMMCV: 1.4.5\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.21.0+e97ae44", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/composed/50_real_50_fake/helper/annotation/unpaired_aug.json',\n        img_prefix='../dataset/xray/composed/50_real_50_fake/unpaired_aug/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = './checkpoints/cascade_rcnn_r101_fpn_1x_coco_20200317-0b6a2fbf.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('FIREARM', 'KNIFE')\nwork_dir = 'work_dirs/50_real_50_fake/crcnn/unpaired_aug/'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 670699413, "exp_name": "crcnn_config.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 4023, "data_time": 0.04829, "loss_rpn_cls": 0.09874, "loss_rpn_bbox": 0.00822, "s0.loss_cls": 0.24213, "s0.acc": 95.10742, "s0.loss_bbox": 0.01501, "s1.loss_cls": 0.15937, "s1.acc": 86.88281, "s1.loss_bbox": 0.01292, "s2.loss_cls": 0.07205, "s2.acc": 90.06641, "s2.loss_bbox": 0.00578, "loss": 0.61422, "time": 0.3804}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 4023, "data_time": 0.0046, "loss_rpn_cls": 0.0558, "loss_rpn_bbox": 0.00917, "s0.loss_cls": 0.06895, "s0.acc": 98.25781, "s0.loss_bbox": 0.01634, "s1.loss_cls": 0.03536, "s1.acc": 98.20508, "s1.loss_bbox": 0.01382, "s2.loss_cls": 0.01806, "s2.acc": 98.37695, "s2.loss_bbox": 0.0072, "loss": 0.22469, "time": 0.33788}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 4023, "data_time": 0.00467, "loss_rpn_cls": 0.0356, "loss_rpn_bbox": 0.00585, "s0.loss_cls": 0.04832, "s0.acc": 98.95117, "s0.loss_bbox": 0.0112, "s1.loss_cls": 0.02319, "s1.acc": 98.82031, "s1.loss_bbox": 0.0093, "s2.loss_cls": 0.01236, "s2.acc": 98.35156, "s2.loss_bbox": 0.00604, "loss": 0.15187, "time": 0.33519}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 4023, "data_time": 0.00446, "loss_rpn_cls": 0.0418, "loss_rpn_bbox": 0.00683, "s0.loss_cls": 0.04587, "s0.acc": 98.98047, "s0.loss_bbox": 0.01474, "s1.loss_cls": 0.02061, "s1.acc": 99.04883, "s1.loss_bbox": 0.01271, "s2.loss_cls": 0.01014, "s2.acc": 98.91992, "s2.loss_bbox": 0.00631, "loss": 0.15901, "time": 0.33435}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 4024, "data_time": 0.00467, "loss_rpn_cls": 0.04523, "loss_rpn_bbox": 0.00786, "s0.loss_cls": 0.0457, "s0.acc": 98.97656, "s0.loss_bbox": 0.01279, "s1.loss_cls": 0.01935, "s1.acc": 99.18164, "s1.loss_bbox": 0.01089, "s2.loss_cls": 0.0097, "s2.acc": 99.17383, "s2.loss_bbox": 0.00784, "loss": 0.15937, "time": 0.34198}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 4024, "data_time": 0.00497, "loss_rpn_cls": 0.05054, "loss_rpn_bbox": 0.00883, "s0.loss_cls": 0.04388, "s0.acc": 99.08203, "s0.loss_bbox": 0.01141, "s1.loss_cls": 0.01908, "s1.acc": 99.11914, "s1.loss_bbox": 0.01078, "s2.loss_cls": 0.00843, "s2.acc": 99.21289, "s2.loss_bbox": 0.00597, "loss": 0.15892, "time": 0.3514}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 4024, "data_time": 0.00468, "loss_rpn_cls": 0.04778, "loss_rpn_bbox": 0.00978, "s0.loss_cls": 0.04613, "s0.acc": 99.08594, "s0.loss_bbox": 0.01363, "s1.loss_cls": 0.01802, "s1.acc": 99.25977, "s1.loss_bbox": 0.0107, "s2.loss_cls": 0.00797, "s2.acc": 99.28711, "s2.loss_bbox": 0.00481, "loss": 0.15882, "time": 0.35204}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 4024, "data_time": 0.0048, "loss_rpn_cls": 0.05138, "loss_rpn_bbox": 0.01117, "s0.loss_cls": 0.04012, "s0.acc": 99.14648, "s0.loss_bbox": 0.01125, "s1.loss_cls": 0.01828, "s1.acc": 99.17188, "s1.loss_bbox": 0.01224, "s2.loss_cls": 0.00886, "s2.acc": 99.02734, "s2.loss_bbox": 0.00786, "loss": 0.16116, "time": 0.35336}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 4024, "data_time": 0.00466, "loss_rpn_cls": 0.04826, "loss_rpn_bbox": 0.00649, "s0.loss_cls": 0.04629, "s0.acc": 98.97266, "s0.loss_bbox": 0.01082, "s1.loss_cls": 0.0221, "s1.acc": 98.86328, "s1.loss_bbox": 0.01059, "s2.loss_cls": 0.00982, "s2.acc": 99.01172, "s2.loss_bbox": 0.00573, "loss": 0.16009, "time": 0.35931}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 4024, "data_time": 0.00452, "loss_rpn_cls": 0.05837, "loss_rpn_bbox": 0.01478, "s0.loss_cls": 0.03956, "s0.acc": 99.09375, "s0.loss_bbox": 0.01679, "s1.loss_cls": 0.01714, "s1.acc": 99.12891, "s1.loss_bbox": 0.01486, "s2.loss_cls": 0.00857, "s2.acc": 99.02734, "s2.loss_bbox": 0.00787, "loss": 0.17794, "time": 0.35246}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 4024, "data_time": 0.00539, "loss_rpn_cls": 0.04704, "loss_rpn_bbox": 0.01041, "s0.loss_cls": 0.04143, "s0.acc": 99.16016, "s0.loss_bbox": 0.01118, "s1.loss_cls": 0.01814, "s1.acc": 99.19531, "s1.loss_bbox": 0.01117, "s2.loss_cls": 0.00826, "s2.acc": 99.24219, "s2.loss_bbox": 0.00588, "loss": 0.15352, "time": 0.35551}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 4024, "data_time": 0.00494, "loss_rpn_cls": 0.04526, "loss_rpn_bbox": 0.0087, "s0.loss_cls": 0.03544, "s0.acc": 99.22656, "s0.loss_bbox": 0.01054, "s1.loss_cls": 0.01658, "s1.acc": 99.15234, "s1.loss_bbox": 0.00904, "s2.loss_cls": 0.00819, "s2.acc": 99.10156, "s2.loss_bbox": 0.00556, "loss": 0.1393, "time": 0.35277}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 4024, "data_time": 0.00586, "loss_rpn_cls": 0.05756, "loss_rpn_bbox": 0.01148, "s0.loss_cls": 0.03655, "s0.acc": 99.27344, "s0.loss_bbox": 0.00953, "s1.loss_cls": 0.01598, "s1.acc": 99.3125, "s1.loss_bbox": 0.00901, "s2.loss_cls": 0.00731, "s2.acc": 99.35938, "s2.loss_bbox": 0.00565, "loss": 0.15308, "time": 0.35105}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 4024, "data_time": 0.00464, "loss_rpn_cls": 0.04817, "loss_rpn_bbox": 0.01422, "s0.loss_cls": 0.03746, "s0.acc": 99.18555, "s0.loss_bbox": 0.01126, "s1.loss_cls": 0.01659, "s1.acc": 99.24023, "s1.loss_bbox": 0.01081, "s2.loss_cls": 0.00745, "s2.acc": 99.33789, "s2.loss_bbox": 0.00687, "loss": 0.15284, "time": 0.35497}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 4024, "data_time": 0.00453, "loss_rpn_cls": 0.05692, "loss_rpn_bbox": 0.01392, "s0.loss_cls": 0.0359, "s0.acc": 99.24609, "s0.loss_bbox": 0.00867, "s1.loss_cls": 0.01572, "s1.acc": 99.32227, "s1.loss_bbox": 0.00779, "s2.loss_cls": 0.00761, "s2.acc": 99.30273, "s2.loss_bbox": 0.00483, "loss": 0.15136, "time": 0.35752}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 4024, "data_time": 0.00464, "loss_rpn_cls": 0.04696, "loss_rpn_bbox": 0.01025, "s0.loss_cls": 0.0372, "s0.acc": 99.25391, "s0.loss_bbox": 0.01067, "s1.loss_cls": 0.01622, "s1.acc": 99.31836, "s1.loss_bbox": 0.00745, "s2.loss_cls": 0.0074, "s2.acc": 99.33008, "s2.loss_bbox": 0.00457, "loss": 0.14072, "time": 0.35127}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 4024, "data_time": 0.0049, "loss_rpn_cls": 0.04342, "loss_rpn_bbox": 0.00737, "s0.loss_cls": 0.04216, "s0.acc": 99.09961, "s0.loss_bbox": 0.01124, "s1.loss_cls": 0.01756, "s1.acc": 99.13867, "s1.loss_bbox": 0.00964, "s2.loss_cls": 0.00837, "s2.acc": 99.10742, "s2.loss_bbox": 0.00613, "loss": 0.1459, "time": 0.3452}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 4024, "data_time": 0.00457, "loss_rpn_cls": 0.05379, "loss_rpn_bbox": 0.0109, "s0.loss_cls": 0.04901, "s0.acc": 98.95703, "s0.loss_bbox": 0.01544, "s1.loss_cls": 0.01995, "s1.acc": 99.13086, "s1.loss_bbox": 0.01334, "s2.loss_cls": 0.0092, "s2.acc": 99.13672, "s2.loss_bbox": 0.00836, "loss": 0.17999, "time": 0.35052}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.02, "memory": 4024, "data_time": 0.00509, "loss_rpn_cls": 0.05591, "loss_rpn_bbox": 0.01405, "s0.loss_cls": 0.04045, "s0.acc": 99.18164, "s0.loss_bbox": 0.01013, "s1.loss_cls": 0.01675, "s1.acc": 99.27148, "s1.loss_bbox": 0.00844, "s2.loss_cls": 0.0073, "s2.acc": 99.37305, "s2.loss_bbox": 0.00473, "loss": 0.15776, "time": 0.35205}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.02, "memory": 4024, "data_time": 0.00465, "loss_rpn_cls": 0.04056, "loss_rpn_bbox": 0.00784, "s0.loss_cls": 0.04091, "s0.acc": 99.17969, "s0.loss_bbox": 0.01364, "s1.loss_cls": 0.01591, "s1.acc": 99.33984, "s1.loss_bbox": 0.01258, "s2.loss_cls": 0.00636, "s2.acc": 99.5293, "s2.loss_bbox": 0.00905, "loss": 0.14686, "time": 0.34711}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.02, "memory": 4024, "data_time": 0.00439, "loss_rpn_cls": 0.04869, "loss_rpn_bbox": 0.00977, "s0.loss_cls": 0.04322, "s0.acc": 99.125, "s0.loss_bbox": 0.01262, "s1.loss_cls": 0.01753, "s1.acc": 99.30273, "s1.loss_bbox": 0.01056, "s2.loss_cls": 0.00755, "s2.acc": 99.33008, "s2.loss_bbox": 0.0068, "loss": 0.15674, "time": 0.35565}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.02, "memory": 4024, "data_time": 0.00468, "loss_rpn_cls": 0.04952, "loss_rpn_bbox": 0.01152, "s0.loss_cls": 0.03541, "s0.acc": 99.23047, "s0.loss_bbox": 0.01092, "s1.loss_cls": 0.0161, "s1.acc": 99.28125, "s1.loss_bbox": 0.01197, "s2.loss_cls": 0.00762, "s2.acc": 99.27344, "s2.loss_bbox": 0.00667, "loss": 0.14973, "time": 0.33995}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.02, "memory": 4024, "data_time": 0.00462, "loss_rpn_cls": 0.04634, "loss_rpn_bbox": 0.00869, "s0.loss_cls": 0.04426, "s0.acc": 99.04492, "s0.loss_bbox": 0.01287, "s1.loss_cls": 0.01859, "s1.acc": 99.13477, "s1.loss_bbox": 0.01348, "s2.loss_cls": 0.00818, "s2.acc": 99.30664, "s2.loss_bbox": 0.00815, "loss": 0.16057, "time": 0.35696}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.02, "memory": 4024, "data_time": 0.00453, "loss_rpn_cls": 0.04791, "loss_rpn_bbox": 0.00836, "s0.loss_cls": 0.04334, "s0.acc": 99.13281, "s0.loss_bbox": 0.01149, "s1.loss_cls": 0.01871, "s1.acc": 99.16406, "s1.loss_bbox": 0.01037, "s2.loss_cls": 0.00778, "s2.acc": 99.25781, "s2.loss_bbox": 0.00509, "loss": 0.15305, "time": 0.35124}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.02, "memory": 4024, "data_time": 0.06208, "loss_rpn_cls": 0.05125, "loss_rpn_bbox": 0.0076, "s0.loss_cls": 0.03666, "s0.acc": 99.23828, "s0.loss_bbox": 0.01053, "s1.loss_cls": 0.01491, "s1.acc": 99.36328, "s1.loss_bbox": 0.00917, "s2.loss_cls": 0.00677, "s2.acc": 99.35156, "s2.loss_bbox": 0.00605, "loss": 0.14295, "time": 0.40104}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.02, "memory": 4024, "data_time": 0.00474, "loss_rpn_cls": 0.0416, "loss_rpn_bbox": 0.00888, "s0.loss_cls": 0.04469, "s0.acc": 98.98633, "s0.loss_bbox": 0.01431, "s1.loss_cls": 0.02043, "s1.acc": 99.03711, "s1.loss_bbox": 0.01351, "s2.loss_cls": 0.00919, "s2.acc": 99.0625, "s2.loss_bbox": 0.0079, "loss": 0.16052, "time": 0.34294}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.02, "memory": 4024, "data_time": 0.00483, "loss_rpn_cls": 0.03756, "loss_rpn_bbox": 0.00867, "s0.loss_cls": 0.04159, "s0.acc": 99.0918, "s0.loss_bbox": 0.01334, "s1.loss_cls": 0.01714, "s1.acc": 99.19922, "s1.loss_bbox": 0.01106, "s2.loss_cls": 0.00769, "s2.acc": 99.17578, "s2.loss_bbox": 0.00688, "loss": 0.14392, "time": 0.35412}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.02, "memory": 4024, "data_time": 0.00468, "loss_rpn_cls": 0.03782, "loss_rpn_bbox": 0.01057, "s0.loss_cls": 0.03757, "s0.acc": 99.17383, "s0.loss_bbox": 0.01338, "s1.loss_cls": 0.01584, "s1.acc": 99.23828, "s1.loss_bbox": 0.0147, "s2.loss_cls": 0.008, "s2.acc": 99.10352, "s2.loss_bbox": 0.01081, "loss": 0.14868, "time": 0.35157}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.02, "memory": 4024, "data_time": 0.00469, "loss_rpn_cls": 0.04313, "loss_rpn_bbox": 0.01245, "s0.loss_cls": 0.04138, "s0.acc": 99.10742, "s0.loss_bbox": 0.01158, "s1.loss_cls": 0.0168, "s1.acc": 99.24805, "s1.loss_bbox": 0.0124, "s2.loss_cls": 0.00677, "s2.acc": 99.36914, "s2.loss_bbox": 0.00795, "loss": 0.15246, "time": 0.35302}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.02, "memory": 4024, "data_time": 0.00478, "loss_rpn_cls": 0.04812, "loss_rpn_bbox": 0.01128, "s0.loss_cls": 0.03717, "s0.acc": 99.12305, "s0.loss_bbox": 0.01096, "s1.loss_cls": 0.01727, "s1.acc": 99.11133, "s1.loss_bbox": 0.01268, "s2.loss_cls": 0.00743, "s2.acc": 99.20117, "s2.loss_bbox": 0.0079, "loss": 0.15281, "time": 0.35025}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.02, "memory": 4024, "data_time": 0.00475, "loss_rpn_cls": 0.04084, "loss_rpn_bbox": 0.00833, "s0.loss_cls": 0.04446, "s0.acc": 99.06055, "s0.loss_bbox": 0.01363, "s1.loss_cls": 0.0177, "s1.acc": 99.14258, "s1.loss_bbox": 0.01258, "s2.loss_cls": 0.00792, "s2.acc": 99.22461, "s2.loss_bbox": 0.00832, "loss": 0.15378, "time": 0.33606}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.02, "memory": 4024, "data_time": 0.0049, "loss_rpn_cls": 0.03911, "loss_rpn_bbox": 0.0079, "s0.loss_cls": 0.03729, "s0.acc": 99.1582, "s0.loss_bbox": 0.01243, "s1.loss_cls": 0.01559, "s1.acc": 99.24414, "s1.loss_bbox": 0.01297, "s2.loss_cls": 0.00683, "s2.acc": 99.30078, "s2.loss_bbox": 0.00872, "loss": 0.14084, "time": 0.35357}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.02, "memory": 4024, "data_time": 0.00471, "loss_rpn_cls": 0.03935, "loss_rpn_bbox": 0.00836, "s0.loss_cls": 0.04518, "s0.acc": 99.08008, "s0.loss_bbox": 0.01327, "s1.loss_cls": 0.01782, "s1.acc": 99.16992, "s1.loss_bbox": 0.01277, "s2.loss_cls": 0.00736, "s2.acc": 99.28516, "s2.loss_bbox": 0.00731, "loss": 0.15142, "time": 0.34372}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.02, "memory": 4024, "data_time": 0.00484, "loss_rpn_cls": 0.04503, "loss_rpn_bbox": 0.00912, "s0.loss_cls": 0.03997, "s0.acc": 99.1582, "s0.loss_bbox": 0.01209, "s1.loss_cls": 0.0159, "s1.acc": 99.30469, "s1.loss_bbox": 0.01192, "s2.loss_cls": 0.00731, "s2.acc": 99.38281, "s2.loss_bbox": 0.00685, "loss": 0.1482, "time": 0.33845}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.02, "memory": 4024, "data_time": 0.05446, "loss_rpn_cls": 0.03463, "loss_rpn_bbox": 0.00873, "s0.loss_cls": 0.03758, "s0.acc": 99.20117, "s0.loss_bbox": 0.01231, "s1.loss_cls": 0.01567, "s1.acc": 99.25, "s1.loss_bbox": 0.01242, "s2.loss_cls": 0.00682, "s2.acc": 99.31836, "s2.loss_bbox": 0.00768, "loss": 0.13584, "time": 0.39718}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.02, "memory": 4024, "data_time": 0.00477, "loss_rpn_cls": 0.04047, "loss_rpn_bbox": 0.00883, "s0.loss_cls": 0.04034, "s0.acc": 99.125, "s0.loss_bbox": 0.01332, "s1.loss_cls": 0.0166, "s1.acc": 99.24219, "s1.loss_bbox": 0.01475, "s2.loss_cls": 0.00704, "s2.acc": 99.3457, "s2.loss_bbox": 0.00865, "loss": 0.14999, "time": 0.35227}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.02, "memory": 4024, "data_time": 0.00439, "loss_rpn_cls": 0.03804, "loss_rpn_bbox": 0.00834, "s0.loss_cls": 0.03911, "s0.acc": 99.17773, "s0.loss_bbox": 0.01391, "s1.loss_cls": 0.01525, "s1.acc": 99.38281, "s1.loss_bbox": 0.01363, "s2.loss_cls": 0.00595, "s2.acc": 99.48047, "s2.loss_bbox": 0.00823, "loss": 0.14245, "time": 0.34753}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.02, "memory": 4024, "data_time": 0.00451, "loss_rpn_cls": 0.03601, "loss_rpn_bbox": 0.00901, "s0.loss_cls": 0.0383, "s0.acc": 99.12305, "s0.loss_bbox": 0.01207, "s1.loss_cls": 0.01563, "s1.acc": 99.2793, "s1.loss_bbox": 0.01177, "s2.loss_cls": 0.0068, "s2.acc": 99.30078, "s2.loss_bbox": 0.00709, "loss": 0.13667, "time": 0.34867}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.02, "memory": 4024, "data_time": 0.00469, "loss_rpn_cls": 0.03089, "loss_rpn_bbox": 0.00757, "s0.loss_cls": 0.03879, "s0.acc": 99.08008, "s0.loss_bbox": 0.01353, "s1.loss_cls": 0.01615, "s1.acc": 99.27344, "s1.loss_bbox": 0.01509, "s2.loss_cls": 0.00716, "s2.acc": 99.24609, "s2.loss_bbox": 0.01006, "loss": 0.13924, "time": 0.34257}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.02, "memory": 4024, "data_time": 0.00464, "loss_rpn_cls": 0.04078, "loss_rpn_bbox": 0.00689, "s0.loss_cls": 0.04276, "s0.acc": 99.0293, "s0.loss_bbox": 0.01614, "s1.loss_cls": 0.01764, "s1.acc": 99.19141, "s1.loss_bbox": 0.01625, "s2.loss_cls": 0.00698, "s2.acc": 99.30078, "s2.loss_bbox": 0.01124, "loss": 0.15869, "time": 0.34993}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.02, "memory": 4024, "data_time": 0.00442, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 65.86914, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 65.9043, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 65.90234, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.3123}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.02, "memory": 4024, "data_time": 0.00452, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29531}
{"mode": "val", "epoch": 1, "iter": 1912, "lr": 0.02}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.02, "memory": 4024, "data_time": 0.0483, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 56.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 56.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 56.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.3361}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.02, "memory": 4024, "data_time": 0.00444, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 59.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 59.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 59.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28771}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.02, "memory": 4024, "data_time": 0.00415, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 44.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 44.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 44.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28822}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.02, "memory": 4024, "data_time": 0.00408, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 51.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 51.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 51.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28106}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.02, "memory": 4024, "data_time": 0.00435, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28945}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.02, "memory": 4024, "data_time": 0.00423, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29472}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.02, "memory": 4024, "data_time": 0.00445, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 58.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 58.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 58.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29992}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 49.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 49.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 49.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28158}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.02, "memory": 4024, "data_time": 0.00393, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 41.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 41.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 41.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29677}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.02, "memory": 4024, "data_time": 0.01821, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 57.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 57.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 57.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.30239}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.02, "memory": 4024, "data_time": 0.01446, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.30673}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.02, "memory": 4024, "data_time": 0.00399, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 56.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 56.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 56.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27027}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.02, "memory": 4024, "data_time": 0.00409, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 44.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 44.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 44.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28418}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.02, "memory": 4024, "data_time": 0.00417, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28949}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.02, "memory": 4024, "data_time": 0.00451, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 52.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 52.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 52.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29449}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.02, "memory": 4024, "data_time": 0.00446, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 47.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 47.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 47.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28158}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.02, "memory": 4024, "data_time": 0.0041, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 54.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 54.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 54.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28403}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.02, "memory": 4024, "data_time": 0.00432, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 53.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 53.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 53.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29486}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.02, "memory": 4024, "data_time": 0.00453, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28487}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.02, "memory": 4024, "data_time": 0.00413, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28047}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.02, "memory": 4024, "data_time": 0.00399, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27617}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.02, "memory": 4024, "data_time": 0.00391, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 53.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 53.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 53.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28097}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.02, "memory": 4024, "data_time": 0.02127, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 44.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 44.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 44.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28788}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.02, "memory": 4024, "data_time": 0.00449, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 56.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 56.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 56.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29394}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.02, "memory": 4024, "data_time": 0.00412, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29012}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.02, "memory": 4024, "data_time": 0.00442, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 44.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 44.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 44.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29416}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 52.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 52.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 52.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28544}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.02, "memory": 4024, "data_time": 0.00414, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 47.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 47.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 47.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28113}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.02, "memory": 4024, "data_time": 0.00444, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29152}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.02, "memory": 4024, "data_time": 0.00444, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29824}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.02, "memory": 4024, "data_time": 0.00457, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 55.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 55.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 55.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28881}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.02, "memory": 4024, "data_time": 0.00447, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 57.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 57.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 57.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28107}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.02, "memory": 4024, "data_time": 0.00408, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 42.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 42.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 42.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.26619}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.02, "memory": 4024, "data_time": 0.00458, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 42.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 42.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 42.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29418}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.02, "memory": 4024, "data_time": 0.00427, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 56.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 56.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 56.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29168}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.02, "memory": 4024, "data_time": 0.01382, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 56.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 56.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 56.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29002}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.02, "memory": 4024, "data_time": 0.00418, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28917}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.02, "memory": 4024, "data_time": 0.00413, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28712}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.02, "memory": 4024, "data_time": 0.00438, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 53.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 53.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 53.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28357}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.02, "memory": 4024, "data_time": 0.00422, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 53.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 53.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 53.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.2753}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.02, "memory": 4024, "data_time": 0.0046, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 49.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 49.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 49.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28469}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.02, "memory": 4024, "data_time": 0.0042, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28938}
{"mode": "val", "epoch": 2, "iter": 1912, "lr": 0.02}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.02, "memory": 4024, "data_time": 0.04836, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.32886}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 51.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 51.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 51.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28081}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.02, "memory": 4024, "data_time": 0.00396, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 51.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 51.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 51.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28505}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.02, "memory": 4024, "data_time": 0.00406, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 42.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 42.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 42.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27318}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.02, "memory": 4024, "data_time": 0.00469, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28467}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.02, "memory": 4024, "data_time": 0.00402, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 51.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 51.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 51.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28133}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.02, "memory": 4024, "data_time": 0.00398, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 59.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 59.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 59.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28693}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.02, "memory": 4024, "data_time": 0.004, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 47.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 47.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 47.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.26902}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.02, "memory": 4024, "data_time": 0.00448, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 57.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 57.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 57.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29064}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.02, "memory": 4024, "data_time": 0.00398, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28447}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.02, "memory": 4024, "data_time": 0.00394, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 47.16667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 47.16667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 47.16667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.26016}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.02, "memory": 4024, "data_time": 0.00451, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29196}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.02, "memory": 4024, "data_time": 0.00424, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28714}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.02, "memory": 4024, "data_time": 0.00447, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 57.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 57.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 57.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29042}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.02, "memory": 4024, "data_time": 0.00427, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 45.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 45.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 45.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28094}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.02, "memory": 4024, "data_time": 0.00398, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 49.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 49.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 49.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27372}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.02, "memory": 4024, "data_time": 0.00408, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 45.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 45.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 45.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27567}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.02, "memory": 4024, "data_time": 0.00399, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27738}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.02, "memory": 4024, "data_time": 0.00453, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 53.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 53.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 53.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28406}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.02, "memory": 4024, "data_time": 0.00448, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29207}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.02, "memory": 4024, "data_time": 0.01019, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 56.33333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 56.33333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 56.33333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28501}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.02, "memory": 4024, "data_time": 0.0043, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 51.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 51.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 51.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.26956}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 0.02, "memory": 4024, "data_time": 0.00423, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 52.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 52.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 52.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28002}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.02, "memory": 4024, "data_time": 0.00461, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28862}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 0.02, "memory": 4024, "data_time": 0.00457, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 59.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 59.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 59.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27415}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 0.02, "memory": 4024, "data_time": 0.00459, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 51.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 51.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 51.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29211}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 0.02, "memory": 4024, "data_time": 0.00467, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 47.83333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 47.83333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 47.83333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28521}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 0.02, "memory": 4024, "data_time": 0.0049, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 48.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 48.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 48.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27308}
{"mode": "train", "epoch": 3, "iter": 1450, "lr": 0.02, "memory": 4024, "data_time": 0.00447, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 46.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 46.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 46.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 0.02, "memory": 4024, "data_time": 0.00407, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 50.83333, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 50.83333, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 50.83333, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27165}
{"mode": "train", "epoch": 3, "iter": 1550, "lr": 0.02, "memory": 4024, "data_time": 0.00421, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 54.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 54.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 54.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27621}
{"mode": "train", "epoch": 3, "iter": 1600, "lr": 0.02, "memory": 4024, "data_time": 0.00412, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 49.66667, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 49.66667, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 49.66667, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28188}
{"mode": "train", "epoch": 3, "iter": 1650, "lr": 0.02, "memory": 4024, "data_time": 0.0043, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 43.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 43.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 43.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.28368}
{"mode": "train", "epoch": 3, "iter": 1700, "lr": 0.02, "memory": 4024, "data_time": 0.00423, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 47.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 47.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 47.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.27989}
{"mode": "train", "epoch": 3, "iter": 1750, "lr": 0.02, "memory": 4024, "data_time": 0.00415, "loss_rpn_cls": NaN, "loss_rpn_bbox": NaN, "s0.loss_cls": NaN, "s0.acc": 53.0, "s0.loss_bbox": NaN, "s1.loss_cls": NaN, "s1.acc": 53.0, "s1.loss_bbox": NaN, "s2.loss_cls": NaN, "s2.acc": 53.0, "s2.loss_bbox": NaN, "loss": NaN, "time": 0.29095}
