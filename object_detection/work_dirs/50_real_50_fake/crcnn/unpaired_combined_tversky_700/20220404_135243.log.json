{"env_info": "sys.platform: linux\nPython: 3.8.11 (default, Jul  3 2021, 17:53:42) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2080 Ti\nCUDA_HOME: /apps/cuda/cuda-11.0-cudnn8.0\nNVCC: \nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.5.5\nMMCV: 1.4.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.23.0+21b6da3", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/composed/50_real_50_fake/helper/annotation/unpaired_combined_tversky_700.json',\n        img_prefix=\n        '../dataset/xray/composed/50_real_50_fake/unpaired_combined_tversky_700/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = './checkpoints/cascade_rcnn_r101_fpn_1x_coco_20200317-0b6a2fbf.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('FIREARM', 'KNIFE')\nwork_dir = 'work_dirs/50_real_50_fake/crcnn/unpaired_combined_tversky_700/'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 601776733, "exp_name": "crcnn_config.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 4023, "data_time": 0.04692, "loss_rpn_cls": 0.04694, "loss_rpn_bbox": 0.00835, "s0.loss_cls": 0.29479, "s0.acc": 94.01562, "s0.loss_bbox": 0.03961, "s1.loss_cls": 0.15288, "s1.acc": 93.16406, "s1.loss_bbox": 0.02625, "s2.loss_cls": 0.06421, "s2.acc": 95.43164, "s2.loss_bbox": 0.00858, "loss": 0.64162, "time": 0.3644}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 4023, "data_time": 0.00368, "loss_rpn_cls": 0.03436, "loss_rpn_bbox": 0.008, "s0.loss_cls": 0.11657, "s0.acc": 97.0332, "s0.loss_bbox": 0.0458, "s1.loss_cls": 0.05294, "s1.acc": 97.33594, "s1.loss_bbox": 0.03383, "s2.loss_cls": 0.02242, "s2.acc": 97.94727, "s2.loss_bbox": 0.01333, "loss": 0.32725, "time": 0.31661}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 4023, "data_time": 0.00384, "loss_rpn_cls": 0.03355, "loss_rpn_bbox": 0.00717, "s0.loss_cls": 0.1054, "s0.acc": 97.42188, "s0.loss_bbox": 0.0402, "s1.loss_cls": 0.04698, "s1.acc": 97.38281, "s1.loss_bbox": 0.03134, "s2.loss_cls": 0.02007, "s2.acc": 97.87695, "s2.loss_bbox": 0.01412, "loss": 0.29883, "time": 0.3193}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 4023, "data_time": 0.00373, "loss_rpn_cls": 0.03555, "loss_rpn_bbox": 0.00763, "s0.loss_cls": 0.09018, "s0.acc": 97.5957, "s0.loss_bbox": 0.03813, "s1.loss_cls": 0.04112, "s1.acc": 97.77148, "s1.loss_bbox": 0.03411, "s2.loss_cls": 0.01771, "s2.acc": 97.88281, "s2.loss_bbox": 0.01529, "loss": 0.27972, "time": 0.32258}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 4023, "data_time": 0.00372, "loss_rpn_cls": 0.02917, "loss_rpn_bbox": 0.00927, "s0.loss_cls": 0.07081, "s0.acc": 97.98047, "s0.loss_bbox": 0.02693, "s1.loss_cls": 0.036, "s1.acc": 97.88477, "s1.loss_bbox": 0.03221, "s2.loss_cls": 0.01725, "s2.acc": 97.77734, "s2.loss_bbox": 0.01729, "loss": 0.23894, "time": 0.3252}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 4023, "data_time": 0.00385, "loss_rpn_cls": 0.02427, "loss_rpn_bbox": 0.00645, "s0.loss_cls": 0.07586, "s0.acc": 97.93555, "s0.loss_bbox": 0.034, "s1.loss_cls": 0.0334, "s1.acc": 97.92188, "s1.loss_bbox": 0.03426, "s2.loss_cls": 0.01552, "s2.acc": 98.05859, "s2.loss_bbox": 0.01726, "loss": 0.24101, "time": 0.32181}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 4023, "data_time": 0.00399, "loss_rpn_cls": 0.01936, "loss_rpn_bbox": 0.00845, "s0.loss_cls": 0.0824, "s0.acc": 97.8418, "s0.loss_bbox": 0.03629, "s1.loss_cls": 0.03771, "s1.acc": 97.87695, "s1.loss_bbox": 0.03716, "s2.loss_cls": 0.01836, "s2.acc": 97.63672, "s2.loss_bbox": 0.02161, "loss": 0.26134, "time": 0.3272}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 4023, "data_time": 0.00405, "loss_rpn_cls": 0.02889, "loss_rpn_bbox": 0.00929, "s0.loss_cls": 0.07695, "s0.acc": 98.07617, "s0.loss_bbox": 0.03112, "s1.loss_cls": 0.03242, "s1.acc": 98.21484, "s1.loss_bbox": 0.02813, "s2.loss_cls": 0.01388, "s2.acc": 98.30859, "s2.loss_bbox": 0.01482, "loss": 0.2355, "time": 0.3253}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 4023, "data_time": 0.00413, "loss_rpn_cls": 0.03792, "loss_rpn_bbox": 0.00993, "s0.loss_cls": 0.08091, "s0.acc": 97.95312, "s0.loss_bbox": 0.02938, "s1.loss_cls": 0.03532, "s1.acc": 98.04102, "s1.loss_bbox": 0.03229, "s2.loss_cls": 0.01464, "s2.acc": 98.2207, "s2.loss_bbox": 0.01615, "loss": 0.25654, "time": 0.32808}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 4023, "data_time": 0.00395, "loss_rpn_cls": 0.03472, "loss_rpn_bbox": 0.01382, "s0.loss_cls": 0.08074, "s0.acc": 97.86523, "s0.loss_bbox": 0.02853, "s1.loss_cls": 0.03763, "s1.acc": 97.6875, "s1.loss_bbox": 0.02639, "s2.loss_cls": 0.01689, "s2.acc": 97.66797, "s2.loss_bbox": 0.01419, "loss": 0.2529, "time": 0.32415}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 4023, "data_time": 0.00387, "loss_rpn_cls": 0.02848, "loss_rpn_bbox": 0.00768, "s0.loss_cls": 0.06804, "s0.acc": 98.10352, "s0.loss_bbox": 0.02734, "s1.loss_cls": 0.0343, "s1.acc": 97.92773, "s1.loss_bbox": 0.02961, "s2.loss_cls": 0.01584, "s2.acc": 97.93945, "s2.loss_bbox": 0.0151, "loss": 0.2264, "time": 0.32746}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 4023, "data_time": 0.00402, "loss_rpn_cls": 0.02466, "loss_rpn_bbox": 0.01007, "s0.loss_cls": 0.07325, "s0.acc": 97.99219, "s0.loss_bbox": 0.03403, "s1.loss_cls": 0.03357, "s1.acc": 97.98438, "s1.loss_bbox": 0.03622, "s2.loss_cls": 0.01588, "s2.acc": 97.92773, "s2.loss_bbox": 0.02278, "loss": 0.25046, "time": 0.3301}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 4023, "data_time": 0.00401, "loss_rpn_cls": 0.0195, "loss_rpn_bbox": 0.00819, "s0.loss_cls": 0.07963, "s0.acc": 97.77148, "s0.loss_bbox": 0.03253, "s1.loss_cls": 0.03703, "s1.acc": 97.71289, "s1.loss_bbox": 0.03631, "s2.loss_cls": 0.01659, "s2.acc": 97.84961, "s2.loss_bbox": 0.02039, "loss": 0.25017, "time": 0.32954}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 4023, "data_time": 0.00388, "loss_rpn_cls": 0.02112, "loss_rpn_bbox": 0.00601, "s0.loss_cls": 0.07796, "s0.acc": 97.78125, "s0.loss_bbox": 0.03253, "s1.loss_cls": 0.03778, "s1.acc": 97.77734, "s1.loss_bbox": 0.03462, "s2.loss_cls": 0.01689, "s2.acc": 97.89453, "s2.loss_bbox": 0.02014, "loss": 0.24705, "time": 0.32717}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 4023, "data_time": 0.0041, "loss_rpn_cls": 0.02572, "loss_rpn_bbox": 0.00762, "s0.loss_cls": 0.06863, "s0.acc": 98.18359, "s0.loss_bbox": 0.03101, "s1.loss_cls": 0.03051, "s1.acc": 98.24219, "s1.loss_bbox": 0.03114, "s2.loss_cls": 0.01359, "s2.acc": 98.33008, "s2.loss_bbox": 0.01754, "loss": 0.22574, "time": 0.33195}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 4023, "data_time": 0.00402, "loss_rpn_cls": 0.0201, "loss_rpn_bbox": 0.00911, "s0.loss_cls": 0.07721, "s0.acc": 97.95898, "s0.loss_bbox": 0.03838, "s1.loss_cls": 0.03443, "s1.acc": 98.17188, "s1.loss_bbox": 0.03507, "s2.loss_cls": 0.01358, "s2.acc": 98.27734, "s2.loss_bbox": 0.01626, "loss": 0.24413, "time": 0.33243}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 4023, "data_time": 0.00415, "loss_rpn_cls": 0.02254, "loss_rpn_bbox": 0.0063, "s0.loss_cls": 0.08138, "s0.acc": 97.94727, "s0.loss_bbox": 0.03395, "s1.loss_cls": 0.03543, "s1.acc": 98.04102, "s1.loss_bbox": 0.03189, "s2.loss_cls": 0.0145, "s2.acc": 98.24805, "s2.loss_bbox": 0.01676, "loss": 0.24275, "time": 0.33154}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 4024, "data_time": 0.00396, "loss_rpn_cls": 0.03146, "loss_rpn_bbox": 0.00754, "s0.loss_cls": 0.07453, "s0.acc": 97.96094, "s0.loss_bbox": 0.03293, "s1.loss_cls": 0.03419, "s1.acc": 98.03516, "s1.loss_bbox": 0.03177, "s2.loss_cls": 0.01446, "s2.acc": 98.22266, "s2.loss_bbox": 0.01763, "loss": 0.24451, "time": 0.32993}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.02, "memory": 4024, "data_time": 0.00404, "loss_rpn_cls": 0.0253, "loss_rpn_bbox": 0.00819, "s0.loss_cls": 0.05472, "s0.acc": 98.45312, "s0.loss_bbox": 0.02733, "s1.loss_cls": 0.02574, "s1.acc": 98.49023, "s1.loss_bbox": 0.03159, "s2.loss_cls": 0.01368, "s2.acc": 98.20898, "s2.loss_bbox": 0.01943, "loss": 0.20599, "time": 0.33302}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.02, "memory": 4024, "data_time": 0.00392, "loss_rpn_cls": 0.02215, "loss_rpn_bbox": 0.00872, "s0.loss_cls": 0.05904, "s0.acc": 98.29688, "s0.loss_bbox": 0.02843, "s1.loss_cls": 0.0297, "s1.acc": 98.17383, "s1.loss_bbox": 0.03566, "s2.loss_cls": 0.01413, "s2.acc": 98.12305, "s2.loss_bbox": 0.02227, "loss": 0.22009, "time": 0.33323}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.02, "memory": 4024, "data_time": 0.00417, "loss_rpn_cls": 0.02348, "loss_rpn_bbox": 0.00908, "s0.loss_cls": 0.07586, "s0.acc": 98.01367, "s0.loss_bbox": 0.03567, "s1.loss_cls": 0.0352, "s1.acc": 98.11523, "s1.loss_bbox": 0.0403, "s2.loss_cls": 0.01495, "s2.acc": 98.16602, "s2.loss_bbox": 0.02269, "loss": 0.25724, "time": 0.33333}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.02, "memory": 4024, "data_time": 0.00407, "loss_rpn_cls": 0.0219, "loss_rpn_bbox": 0.00572, "s0.loss_cls": 0.07021, "s0.acc": 98.17578, "s0.loss_bbox": 0.0303, "s1.loss_cls": 0.0312, "s1.acc": 98.21484, "s1.loss_bbox": 0.03346, "s2.loss_cls": 0.01313, "s2.acc": 98.4082, "s2.loss_bbox": 0.0198, "loss": 0.22574, "time": 0.33472}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.02, "memory": 4024, "data_time": 0.00407, "loss_rpn_cls": 0.03377, "loss_rpn_bbox": 0.0085, "s0.loss_cls": 0.07551, "s0.acc": 97.90039, "s0.loss_bbox": 0.03242, "s1.loss_cls": 0.03611, "s1.acc": 97.83594, "s1.loss_bbox": 0.03402, "s2.loss_cls": 0.0164, "s2.acc": 98.08203, "s2.loss_bbox": 0.02083, "loss": 0.25754, "time": 0.33236}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.02, "memory": 4024, "data_time": 0.00411, "loss_rpn_cls": 0.01824, "loss_rpn_bbox": 0.00829, "s0.loss_cls": 0.0648, "s0.acc": 98.23047, "s0.loss_bbox": 0.02597, "s1.loss_cls": 0.03024, "s1.acc": 98.18945, "s1.loss_bbox": 0.03049, "s2.loss_cls": 0.01358, "s2.acc": 98.33203, "s2.loss_bbox": 0.01909, "loss": 0.2107, "time": 0.33401}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.02, "memory": 4024, "data_time": 0.00635, "loss_rpn_cls": 0.02047, "loss_rpn_bbox": 0.00675, "s0.loss_cls": 0.07033, "s0.acc": 97.97266, "s0.loss_bbox": 0.03109, "s1.loss_cls": 0.03571, "s1.acc": 97.86328, "s1.loss_bbox": 0.03668, "s2.loss_cls": 0.01714, "s2.acc": 97.63086, "s2.loss_bbox": 0.0237, "loss": 0.24186, "time": 0.33416}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.02, "memory": 4024, "data_time": 0.00397, "loss_rpn_cls": 0.02695, "loss_rpn_bbox": 0.00797, "s0.loss_cls": 0.05923, "s0.acc": 98.32617, "s0.loss_bbox": 0.02682, "s1.loss_cls": 0.02718, "s1.acc": 98.48438, "s1.loss_bbox": 0.03003, "s2.loss_cls": 0.01323, "s2.acc": 98.44336, "s2.loss_bbox": 0.02011, "loss": 0.21151, "time": 0.33143}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.02, "memory": 4024, "data_time": 0.00407, "loss_rpn_cls": 0.02008, "loss_rpn_bbox": 0.00664, "s0.loss_cls": 0.05828, "s0.acc": 98.30859, "s0.loss_bbox": 0.02727, "s1.loss_cls": 0.02669, "s1.acc": 98.33008, "s1.loss_bbox": 0.03597, "s2.loss_cls": 0.01268, "s2.acc": 98.36328, "s2.loss_bbox": 0.02501, "loss": 0.21262, "time": 0.3371}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.02, "memory": 4024, "data_time": 0.0042, "loss_rpn_cls": 0.02129, "loss_rpn_bbox": 0.00652, "s0.loss_cls": 0.06893, "s0.acc": 98.17188, "s0.loss_bbox": 0.031, "s1.loss_cls": 0.03111, "s1.acc": 98.20703, "s1.loss_bbox": 0.03915, "s2.loss_cls": 0.01474, "s2.acc": 98.12305, "s2.loss_bbox": 0.02647, "loss": 0.23921, "time": 0.33065}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": 0.02517, "loss_rpn_bbox": 0.00768, "s0.loss_cls": 0.07006, "s0.acc": 98.06055, "s0.loss_bbox": 0.02918, "s1.loss_cls": 0.0325, "s1.acc": 98.08398, "s1.loss_bbox": 0.03432, "s2.loss_cls": 0.0153, "s2.acc": 98.02344, "s2.loss_bbox": 0.02124, "loss": 0.23546, "time": 0.33455}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.02, "memory": 4024, "data_time": 0.00399, "loss_rpn_cls": 0.02789, "loss_rpn_bbox": 0.00749, "s0.loss_cls": 0.05745, "s0.acc": 98.41797, "s0.loss_bbox": 0.02456, "s1.loss_cls": 0.02881, "s1.acc": 98.29297, "s1.loss_bbox": 0.03014, "s2.loss_cls": 0.01384, "s2.acc": 98.18945, "s2.loss_bbox": 0.02021, "loss": 0.21038, "time": 0.33424}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.02, "memory": 4024, "data_time": 0.00406, "loss_rpn_cls": 0.0258, "loss_rpn_bbox": 0.00754, "s0.loss_cls": 0.06117, "s0.acc": 98.33203, "s0.loss_bbox": 0.02652, "s1.loss_cls": 0.02802, "s1.acc": 98.39648, "s1.loss_bbox": 0.02867, "s2.loss_cls": 0.01238, "s2.acc": 98.63281, "s2.loss_bbox": 0.01826, "loss": 0.20835, "time": 0.33598}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.02, "memory": 4024, "data_time": 0.00408, "loss_rpn_cls": 0.04059, "loss_rpn_bbox": 0.01212, "s0.loss_cls": 0.05533, "s0.acc": 98.46875, "s0.loss_bbox": 0.02573, "s1.loss_cls": 0.02442, "s1.acc": 98.58594, "s1.loss_bbox": 0.0294, "s2.loss_cls": 0.01064, "s2.acc": 98.69922, "s2.loss_bbox": 0.01887, "loss": 0.21711, "time": 0.3255}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.02, "memory": 4024, "data_time": 0.00382, "loss_rpn_cls": 0.01864, "loss_rpn_bbox": 0.0075, "s0.loss_cls": 0.05608, "s0.acc": 98.39258, "s0.loss_bbox": 0.02555, "s1.loss_cls": 0.02721, "s1.acc": 98.35156, "s1.loss_bbox": 0.02965, "s2.loss_cls": 0.01284, "s2.acc": 98.28125, "s2.loss_bbox": 0.01831, "loss": 0.19579, "time": 0.32937}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.02, "memory": 4024, "data_time": 0.00397, "loss_rpn_cls": 0.02142, "loss_rpn_bbox": 0.00842, "s0.loss_cls": 0.05477, "s0.acc": 98.45703, "s0.loss_bbox": 0.02811, "s1.loss_cls": 0.02436, "s1.acc": 98.54297, "s1.loss_bbox": 0.03053, "s2.loss_cls": 0.01142, "s2.acc": 98.55078, "s2.loss_bbox": 0.01829, "loss": 0.19732, "time": 0.33197}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": 0.02372, "loss_rpn_bbox": 0.00738, "s0.loss_cls": 0.06213, "s0.acc": 98.28125, "s0.loss_bbox": 0.02872, "s1.loss_cls": 0.02941, "s1.acc": 98.42578, "s1.loss_bbox": 0.03029, "s2.loss_cls": 0.0123, "s2.acc": 98.6582, "s2.loss_bbox": 0.01804, "loss": 0.21199, "time": 0.33126}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.02, "memory": 4024, "data_time": 0.00416, "loss_rpn_cls": 0.02166, "loss_rpn_bbox": 0.00961, "s0.loss_cls": 0.06829, "s0.acc": 98.09375, "s0.loss_bbox": 0.032, "s1.loss_cls": 0.03205, "s1.acc": 98.06445, "s1.loss_bbox": 0.03414, "s2.loss_cls": 0.01496, "s2.acc": 98.18555, "s2.loss_bbox": 0.01991, "loss": 0.23262, "time": 0.33146}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.02, "memory": 4024, "data_time": 0.00412, "loss_rpn_cls": 0.03111, "loss_rpn_bbox": 0.00853, "s0.loss_cls": 0.06212, "s0.acc": 98.35547, "s0.loss_bbox": 0.03056, "s1.loss_cls": 0.02754, "s1.acc": 98.33789, "s1.loss_bbox": 0.03534, "s2.loss_cls": 0.01127, "s2.acc": 98.51758, "s2.loss_bbox": 0.02082, "loss": 0.2273, "time": 0.33422}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.02, "memory": 4024, "data_time": 0.00418, "loss_rpn_cls": 0.0266, "loss_rpn_bbox": 0.01189, "s0.loss_cls": 0.06303, "s0.acc": 98.3418, "s0.loss_bbox": 0.031, "s1.loss_cls": 0.02685, "s1.acc": 98.50977, "s1.loss_bbox": 0.03371, "s2.loss_cls": 0.01176, "s2.acc": 98.55078, "s2.loss_bbox": 0.01926, "loss": 0.22411, "time": 0.33547}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.02, "memory": 4024, "data_time": 0.0041, "loss_rpn_cls": 0.02271, "loss_rpn_bbox": 0.00749, "s0.loss_cls": 0.04736, "s0.acc": 98.69727, "s0.loss_bbox": 0.02262, "s1.loss_cls": 0.02172, "s1.acc": 98.70508, "s1.loss_bbox": 0.02833, "s2.loss_cls": 0.00977, "s2.acc": 98.6875, "s2.loss_bbox": 0.01926, "loss": 0.17927, "time": 0.33276}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.02, "memory": 4024, "data_time": 0.00394, "loss_rpn_cls": 0.02496, "loss_rpn_bbox": 0.01033, "s0.loss_cls": 0.05543, "s0.acc": 98.41016, "s0.loss_bbox": 0.02363, "s1.loss_cls": 0.0272, "s1.acc": 98.37305, "s1.loss_bbox": 0.02852, "s2.loss_cls": 0.01299, "s2.acc": 98.35352, "s2.loss_bbox": 0.0182, "loss": 0.20126, "time": 0.33642}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": 0.01842, "loss_rpn_bbox": 0.00659, "s0.loss_cls": 0.06476, "s0.acc": 98.24219, "s0.loss_bbox": 0.03005, "s1.loss_cls": 0.02786, "s1.acc": 98.35938, "s1.loss_bbox": 0.033, "s2.loss_cls": 0.01242, "s2.acc": 98.39258, "s2.loss_bbox": 0.02087, "loss": 0.21398, "time": 0.33241}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": 0.01983, "loss_rpn_bbox": 0.01124, "s0.loss_cls": 0.06421, "s0.acc": 98.26562, "s0.loss_bbox": 0.02781, "s1.loss_cls": 0.03159, "s1.acc": 98.08789, "s1.loss_bbox": 0.02881, "s2.loss_cls": 0.0147, "s2.acc": 98.04688, "s2.loss_bbox": 0.01799, "loss": 0.21619, "time": 0.33428}
{"mode": "val", "epoch": 1, "iter": 1918, "lr": 0.02, "bbox_mAP": 0.365, "bbox_mAP_50": 0.581, "bbox_mAP_75": 0.429, "bbox_mAP_s": 0.368, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.365 0.581 0.429 0.368 -1.000 -1.000"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.02, "memory": 4024, "data_time": 0.04614, "loss_rpn_cls": 0.01976, "loss_rpn_bbox": 0.00591, "s0.loss_cls": 0.05407, "s0.acc": 98.48438, "s0.loss_bbox": 0.02395, "s1.loss_cls": 0.02607, "s1.acc": 98.48047, "s1.loss_bbox": 0.03012, "s2.loss_cls": 0.01169, "s2.acc": 98.58789, "s2.loss_bbox": 0.02116, "loss": 0.19273, "time": 0.3766}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.02, "memory": 4024, "data_time": 0.00403, "loss_rpn_cls": 0.01998, "loss_rpn_bbox": 0.00822, "s0.loss_cls": 0.05303, "s0.acc": 98.54297, "s0.loss_bbox": 0.02272, "s1.loss_cls": 0.02552, "s1.acc": 98.49219, "s1.loss_bbox": 0.03244, "s2.loss_cls": 0.01108, "s2.acc": 98.5918, "s2.loss_bbox": 0.02302, "loss": 0.19602, "time": 0.33605}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.02, "memory": 4024, "data_time": 0.00395, "loss_rpn_cls": 0.02242, "loss_rpn_bbox": 0.0102, "s0.loss_cls": 0.06555, "s0.acc": 98.33594, "s0.loss_bbox": 0.02804, "s1.loss_cls": 0.02898, "s1.acc": 98.29883, "s1.loss_bbox": 0.03067, "s2.loss_cls": 0.01257, "s2.acc": 98.35352, "s2.loss_bbox": 0.01907, "loss": 0.2175, "time": 0.33432}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.02, "memory": 4024, "data_time": 0.00406, "loss_rpn_cls": 0.02013, "loss_rpn_bbox": 0.00712, "s0.loss_cls": 0.05558, "s0.acc": 98.37695, "s0.loss_bbox": 0.02535, "s1.loss_cls": 0.02672, "s1.acc": 98.31445, "s1.loss_bbox": 0.03534, "s2.loss_cls": 0.01247, "s2.acc": 98.33984, "s2.loss_bbox": 0.02585, "loss": 0.20856, "time": 0.33553}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.02, "memory": 4024, "data_time": 0.00417, "loss_rpn_cls": 0.01441, "loss_rpn_bbox": 0.00571, "s0.loss_cls": 0.05395, "s0.acc": 98.4707, "s0.loss_bbox": 0.0255, "s1.loss_cls": 0.02481, "s1.acc": 98.48242, "s1.loss_bbox": 0.03223, "s2.loss_cls": 0.01114, "s2.acc": 98.52344, "s2.loss_bbox": 0.02152, "loss": 0.18928, "time": 0.3348}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.02, "memory": 4024, "data_time": 0.0042, "loss_rpn_cls": 0.02588, "loss_rpn_bbox": 0.00797, "s0.loss_cls": 0.0625, "s0.acc": 98.33984, "s0.loss_bbox": 0.02765, "s1.loss_cls": 0.02586, "s1.acc": 98.58008, "s1.loss_bbox": 0.02989, "s2.loss_cls": 0.0117, "s2.acc": 98.58008, "s2.loss_bbox": 0.02007, "loss": 0.21153, "time": 0.3304}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.02, "memory": 4024, "data_time": 0.00424, "loss_rpn_cls": 0.01721, "loss_rpn_bbox": 0.00811, "s0.loss_cls": 0.06278, "s0.acc": 98.17773, "s0.loss_bbox": 0.02887, "s1.loss_cls": 0.03071, "s1.acc": 98.125, "s1.loss_bbox": 0.03536, "s2.loss_cls": 0.01508, "s2.acc": 98.04492, "s2.loss_bbox": 0.02361, "loss": 0.22173, "time": 0.3311}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.02, "memory": 4024, "data_time": 0.00412, "loss_rpn_cls": 0.02263, "loss_rpn_bbox": 0.00849, "s0.loss_cls": 0.0619, "s0.acc": 98.29297, "s0.loss_bbox": 0.03039, "s1.loss_cls": 0.02737, "s1.acc": 98.375, "s1.loss_bbox": 0.03644, "s2.loss_cls": 0.01231, "s2.acc": 98.51367, "s2.loss_bbox": 0.02184, "loss": 0.22137, "time": 0.33429}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.02, "memory": 4024, "data_time": 0.00405, "loss_rpn_cls": 0.01822, "loss_rpn_bbox": 0.00648, "s0.loss_cls": 0.06187, "s0.acc": 98.21094, "s0.loss_bbox": 0.032, "s1.loss_cls": 0.02579, "s1.acc": 98.54492, "s1.loss_bbox": 0.03105, "s2.loss_cls": 0.0104, "s2.acc": 98.91016, "s2.loss_bbox": 0.02109, "loss": 0.20689, "time": 0.33277}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.02, "memory": 4024, "data_time": 0.00396, "loss_rpn_cls": 0.01974, "loss_rpn_bbox": 0.00903, "s0.loss_cls": 0.06342, "s0.acc": 98.22266, "s0.loss_bbox": 0.02691, "s1.loss_cls": 0.02943, "s1.acc": 98.18555, "s1.loss_bbox": 0.03199, "s2.loss_cls": 0.01385, "s2.acc": 98.02734, "s2.loss_bbox": 0.02233, "loss": 0.2167, "time": 0.33236}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.02, "memory": 4024, "data_time": 0.00387, "loss_rpn_cls": 0.02247, "loss_rpn_bbox": 0.00763, "s0.loss_cls": 0.05483, "s0.acc": 98.5, "s0.loss_bbox": 0.0234, "s1.loss_cls": 0.02606, "s1.acc": 98.48242, "s1.loss_bbox": 0.03027, "s2.loss_cls": 0.01185, "s2.acc": 98.58008, "s2.loss_bbox": 0.02153, "loss": 0.19805, "time": 0.32959}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.02, "memory": 4024, "data_time": 0.0042, "loss_rpn_cls": 0.01856, "loss_rpn_bbox": 0.00658, "s0.loss_cls": 0.05733, "s0.acc": 98.39258, "s0.loss_bbox": 0.02622, "s1.loss_cls": 0.02781, "s1.acc": 98.30273, "s1.loss_bbox": 0.03153, "s2.loss_cls": 0.01258, "s2.acc": 98.42188, "s2.loss_bbox": 0.02067, "loss": 0.20128, "time": 0.33157}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.02, "memory": 4024, "data_time": 0.00427, "loss_rpn_cls": 0.01745, "loss_rpn_bbox": 0.00637, "s0.loss_cls": 0.05354, "s0.acc": 98.44336, "s0.loss_bbox": 0.02464, "s1.loss_cls": 0.02521, "s1.acc": 98.57031, "s1.loss_bbox": 0.03001, "s2.loss_cls": 0.0113, "s2.acc": 98.67578, "s2.loss_bbox": 0.02169, "loss": 0.19021, "time": 0.33401}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.02, "memory": 4024, "data_time": 0.00427, "loss_rpn_cls": 0.02253, "loss_rpn_bbox": 0.00722, "s0.loss_cls": 0.04796, "s0.acc": 98.61719, "s0.loss_bbox": 0.02564, "s1.loss_cls": 0.02244, "s1.acc": 98.55664, "s1.loss_bbox": 0.03128, "s2.loss_cls": 0.01041, "s2.acc": 98.56641, "s2.loss_bbox": 0.02207, "loss": 0.18956, "time": 0.33247}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.02, "memory": 4024, "data_time": 0.00418, "loss_rpn_cls": 0.0215, "loss_rpn_bbox": 0.00705, "s0.loss_cls": 0.06133, "s0.acc": 98.25977, "s0.loss_bbox": 0.02901, "s1.loss_cls": 0.02829, "s1.acc": 98.21484, "s1.loss_bbox": 0.0334, "s2.loss_cls": 0.01263, "s2.acc": 98.32812, "s2.loss_bbox": 0.02129, "loss": 0.2145, "time": 0.33026}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.02, "memory": 4024, "data_time": 0.00426, "loss_rpn_cls": 0.01516, "loss_rpn_bbox": 0.00523, "s0.loss_cls": 0.05609, "s0.acc": 98.41797, "s0.loss_bbox": 0.02622, "s1.loss_cls": 0.02785, "s1.acc": 98.27539, "s1.loss_bbox": 0.03478, "s2.loss_cls": 0.01384, "s2.acc": 98.20508, "s2.loss_bbox": 0.02462, "loss": 0.20379, "time": 0.33177}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.02, "memory": 4024, "data_time": 0.00428, "loss_rpn_cls": 0.01958, "loss_rpn_bbox": 0.00758, "s0.loss_cls": 0.06022, "s0.acc": 98.40234, "s0.loss_bbox": 0.02928, "s1.loss_cls": 0.02615, "s1.acc": 98.48438, "s1.loss_bbox": 0.03189, "s2.loss_cls": 0.01063, "s2.acc": 98.61719, "s2.loss_bbox": 0.01981, "loss": 0.20514, "time": 0.33228}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.02, "memory": 4024, "data_time": 0.0041, "loss_rpn_cls": 0.01623, "loss_rpn_bbox": 0.00601, "s0.loss_cls": 0.05207, "s0.acc": 98.41797, "s0.loss_bbox": 0.02429, "s1.loss_cls": 0.02613, "s1.acc": 98.38477, "s1.loss_bbox": 0.0328, "s2.loss_cls": 0.01283, "s2.acc": 98.28516, "s2.loss_bbox": 0.02464, "loss": 0.195, "time": 0.33025}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.02, "memory": 4024, "data_time": 0.00398, "loss_rpn_cls": 0.02055, "loss_rpn_bbox": 0.00652, "s0.loss_cls": 0.06217, "s0.acc": 98.24805, "s0.loss_bbox": 0.02573, "s1.loss_cls": 0.0305, "s1.acc": 98.29492, "s1.loss_bbox": 0.03256, "s2.loss_cls": 0.01395, "s2.acc": 98.20703, "s2.loss_bbox": 0.02226, "loss": 0.21424, "time": 0.3289}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.02, "memory": 4024, "data_time": 0.00417, "loss_rpn_cls": 0.02735, "loss_rpn_bbox": 0.00978, "s0.loss_cls": 0.06146, "s0.acc": 98.38086, "s0.loss_bbox": 0.02749, "s1.loss_cls": 0.02569, "s1.acc": 98.58789, "s1.loss_bbox": 0.03049, "s2.loss_cls": 0.0115, "s2.acc": 98.61719, "s2.loss_bbox": 0.02274, "loss": 0.21651, "time": 0.32994}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.02, "memory": 4024, "data_time": 0.00423, "loss_rpn_cls": 0.01769, "loss_rpn_bbox": 0.0055, "s0.loss_cls": 0.05788, "s0.acc": 98.25195, "s0.loss_bbox": 0.0256, "s1.loss_cls": 0.0296, "s1.acc": 98.10352, "s1.loss_bbox": 0.0359, "s2.loss_cls": 0.01342, "s2.acc": 98.16016, "s2.loss_bbox": 0.0248, "loss": 0.2104, "time": 0.3294}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.02, "memory": 4024, "data_time": 0.00405, "loss_rpn_cls": 0.02109, "loss_rpn_bbox": 0.0083, "s0.loss_cls": 0.04913, "s0.acc": 98.67383, "s0.loss_bbox": 0.02371, "s1.loss_cls": 0.02266, "s1.acc": 98.63281, "s1.loss_bbox": 0.03133, "s2.loss_cls": 0.01079, "s2.acc": 98.49023, "s2.loss_bbox": 0.01989, "loss": 0.18689, "time": 0.3276}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.02, "memory": 4024, "data_time": 0.004, "loss_rpn_cls": 0.02037, "loss_rpn_bbox": 0.00823, "s0.loss_cls": 0.05785, "s0.acc": 98.33398, "s0.loss_bbox": 0.02605, "s1.loss_cls": 0.02693, "s1.acc": 98.34766, "s1.loss_bbox": 0.03286, "s2.loss_cls": 0.01171, "s2.acc": 98.47461, "s2.loss_bbox": 0.02078, "loss": 0.20477, "time": 0.33267}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.02, "memory": 4024, "data_time": 0.00404, "loss_rpn_cls": 0.01733, "loss_rpn_bbox": 0.00507, "s0.loss_cls": 0.0618, "s0.acc": 98.2207, "s0.loss_bbox": 0.02909, "s1.loss_cls": 0.02919, "s1.acc": 98.16602, "s1.loss_bbox": 0.03645, "s2.loss_cls": 0.01379, "s2.acc": 98.12891, "s2.loss_bbox": 0.02413, "loss": 0.21685, "time": 0.33042}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.02, "memory": 4024, "data_time": 0.00419, "loss_rpn_cls": 0.02271, "loss_rpn_bbox": 0.00748, "s0.loss_cls": 0.0574, "s0.acc": 98.28125, "s0.loss_bbox": 0.02752, "s1.loss_cls": 0.02719, "s1.acc": 98.18359, "s1.loss_bbox": 0.03308, "s2.loss_cls": 0.01318, "s2.acc": 98.11914, "s2.loss_bbox": 0.02203, "loss": 0.2106, "time": 0.33277}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.02, "memory": 4024, "data_time": 0.0041, "loss_rpn_cls": 0.01854, "loss_rpn_bbox": 0.00629, "s0.loss_cls": 0.05947, "s0.acc": 98.19336, "s0.loss_bbox": 0.02793, "s1.loss_cls": 0.02664, "s1.acc": 98.2793, "s1.loss_bbox": 0.03387, "s2.loss_cls": 0.0128, "s2.acc": 98.33789, "s2.loss_bbox": 0.02417, "loss": 0.20972, "time": 0.33342}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.02, "memory": 4024, "data_time": 0.00401, "loss_rpn_cls": 0.01745, "loss_rpn_bbox": 0.00546, "s0.loss_cls": 0.05307, "s0.acc": 98.34961, "s0.loss_bbox": 0.02459, "s1.loss_cls": 0.02735, "s1.acc": 98.24805, "s1.loss_bbox": 0.03281, "s2.loss_cls": 0.01252, "s2.acc": 98.60156, "s2.loss_bbox": 0.02068, "loss": 0.19393, "time": 0.33091}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.02, "memory": 4024, "data_time": 0.00412, "loss_rpn_cls": 0.02463, "loss_rpn_bbox": 0.01071, "s0.loss_cls": 0.05824, "s0.acc": 98.29883, "s0.loss_bbox": 0.026, "s1.loss_cls": 0.02938, "s1.acc": 98.11914, "s1.loss_bbox": 0.03432, "s2.loss_cls": 0.01267, "s2.acc": 98.39258, "s2.loss_bbox": 0.02388, "loss": 0.21983, "time": 0.33028}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.02, "memory": 4024, "data_time": 0.00419, "loss_rpn_cls": 0.02015, "loss_rpn_bbox": 0.00589, "s0.loss_cls": 0.06308, "s0.acc": 98.21875, "s0.loss_bbox": 0.02983, "s1.loss_cls": 0.03031, "s1.acc": 98.16211, "s1.loss_bbox": 0.03188, "s2.loss_cls": 0.01344, "s2.acc": 98.30273, "s2.loss_bbox": 0.01926, "loss": 0.21385, "time": 0.33149}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.02, "memory": 4024, "data_time": 0.00424, "loss_rpn_cls": 0.02156, "loss_rpn_bbox": 0.00735, "s0.loss_cls": 0.05061, "s0.acc": 98.60352, "s0.loss_bbox": 0.02571, "s1.loss_cls": 0.02236, "s1.acc": 98.67969, "s1.loss_bbox": 0.03074, "s2.loss_cls": 0.00996, "s2.acc": 98.70117, "s2.loss_bbox": 0.02143, "loss": 0.18972, "time": 0.33142}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.02, "memory": 4024, "data_time": 0.00411, "loss_rpn_cls": 0.02043, "loss_rpn_bbox": 0.00864, "s0.loss_cls": 0.05046, "s0.acc": 98.5625, "s0.loss_bbox": 0.0221, "s1.loss_cls": 0.0254, "s1.acc": 98.57031, "s1.loss_bbox": 0.02817, "s2.loss_cls": 0.01213, "s2.acc": 98.61328, "s2.loss_bbox": 0.02039, "loss": 0.18773, "time": 0.32999}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.02, "memory": 4024, "data_time": 0.00416, "loss_rpn_cls": 0.01855, "loss_rpn_bbox": 0.00704, "s0.loss_cls": 0.05404, "s0.acc": 98.41016, "s0.loss_bbox": 0.02502, "s1.loss_cls": 0.025, "s1.acc": 98.55469, "s1.loss_bbox": 0.03162, "s2.loss_cls": 0.01178, "s2.acc": 98.58984, "s2.loss_bbox": 0.02123, "loss": 0.19428, "time": 0.33383}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.02, "memory": 4024, "data_time": 0.00412, "loss_rpn_cls": 0.01561, "loss_rpn_bbox": 0.00513, "s0.loss_cls": 0.05861, "s0.acc": 98.36133, "s0.loss_bbox": 0.02733, "s1.loss_cls": 0.02861, "s1.acc": 98.28711, "s1.loss_bbox": 0.03172, "s2.loss_cls": 0.01292, "s2.acc": 98.30078, "s2.loss_bbox": 0.02003, "loss": 0.19996, "time": 0.33168}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.02, "memory": 4024, "data_time": 0.00387, "loss_rpn_cls": 0.01611, "loss_rpn_bbox": 0.00672, "s0.loss_cls": 0.05106, "s0.acc": 98.59961, "s0.loss_bbox": 0.02549, "s1.loss_cls": 0.02355, "s1.acc": 98.62109, "s1.loss_bbox": 0.03125, "s2.loss_cls": 0.01049, "s2.acc": 98.74414, "s2.loss_bbox": 0.02207, "loss": 0.18674, "time": 0.33312}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.02, "memory": 4024, "data_time": 0.00399, "loss_rpn_cls": 0.02145, "loss_rpn_bbox": 0.01141, "s0.loss_cls": 0.05836, "s0.acc": 98.36914, "s0.loss_bbox": 0.02767, "s1.loss_cls": 0.02652, "s1.acc": 98.42188, "s1.loss_bbox": 0.03366, "s2.loss_cls": 0.01219, "s2.acc": 98.52148, "s2.loss_bbox": 0.0215, "loss": 0.21277, "time": 0.33291}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.02, "memory": 4024, "data_time": 0.00402, "loss_rpn_cls": 0.01739, "loss_rpn_bbox": 0.00774, "s0.loss_cls": 0.04317, "s0.acc": 98.70898, "s0.loss_bbox": 0.02191, "s1.loss_cls": 0.01995, "s1.acc": 98.80078, "s1.loss_bbox": 0.03063, "s2.loss_cls": 0.00995, "s2.acc": 98.6543, "s2.loss_bbox": 0.02393, "loss": 0.17467, "time": 0.3321}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.02, "memory": 4024, "data_time": 0.00387, "loss_rpn_cls": 0.01703, "loss_rpn_bbox": 0.00788, "s0.loss_cls": 0.0663, "s0.acc": 98.12695, "s0.loss_bbox": 0.02852, "s1.loss_cls": 0.03073, "s1.acc": 98.24023, "s1.loss_bbox": 0.03596, "s2.loss_cls": 0.01308, "s2.acc": 98.39648, "s2.loss_bbox": 0.02427, "loss": 0.22377, "time": 0.3299}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.02, "memory": 4024, "data_time": 0.00374, "loss_rpn_cls": 0.01173, "loss_rpn_bbox": 0.00669, "s0.loss_cls": 0.05643, "s0.acc": 98.39648, "s0.loss_bbox": 0.02632, "s1.loss_cls": 0.02741, "s1.acc": 98.38281, "s1.loss_bbox": 0.03357, "s2.loss_cls": 0.01233, "s2.acc": 98.43359, "s2.loss_bbox": 0.02171, "loss": 0.19618, "time": 0.33005}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.02, "memory": 4024, "data_time": 0.00385, "loss_rpn_cls": 0.02835, "loss_rpn_bbox": 0.00888, "s0.loss_cls": 0.06327, "s0.acc": 98.14062, "s0.loss_bbox": 0.0294, "s1.loss_cls": 0.02989, "s1.acc": 98.17969, "s1.loss_bbox": 0.03236, "s2.loss_cls": 0.01214, "s2.acc": 98.45898, "s2.loss_bbox": 0.0185, "loss": 0.22278, "time": 0.33089}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.02, "memory": 4024, "data_time": 0.00386, "loss_rpn_cls": 0.02451, "loss_rpn_bbox": 0.00555, "s0.loss_cls": 0.05726, "s0.acc": 98.44922, "s0.loss_bbox": 0.02408, "s1.loss_cls": 0.02536, "s1.acc": 98.58008, "s1.loss_bbox": 0.02944, "s2.loss_cls": 0.01078, "s2.acc": 98.70117, "s2.loss_bbox": 0.02076, "loss": 0.19775, "time": 0.33039}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.02, "memory": 4024, "data_time": 0.00387, "loss_rpn_cls": 0.01809, "loss_rpn_bbox": 0.00753, "s0.loss_cls": 0.048, "s0.acc": 98.57031, "s0.loss_bbox": 0.02401, "s1.loss_cls": 0.02347, "s1.acc": 98.49609, "s1.loss_bbox": 0.0302, "s2.loss_cls": 0.01004, "s2.acc": 98.69922, "s2.loss_bbox": 0.02055, "loss": 0.18189, "time": 0.33123}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.02, "memory": 4024, "data_time": 0.0038, "loss_rpn_cls": 0.01706, "loss_rpn_bbox": 0.00469, "s0.loss_cls": 0.05221, "s0.acc": 98.45703, "s0.loss_bbox": 0.02558, "s1.loss_cls": 0.02572, "s1.acc": 98.39062, "s1.loss_bbox": 0.03038, "s2.loss_cls": 0.01117, "s2.acc": 98.5, "s2.loss_bbox": 0.02178, "loss": 0.18859, "time": 0.32943}
{"mode": "val", "epoch": 2, "iter": 1918, "lr": 0.02, "bbox_mAP": 0.389, "bbox_mAP_50": 0.588, "bbox_mAP_75": 0.473, "bbox_mAP_s": 0.39, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.389 0.588 0.473 0.390 -1.000 -1.000"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.02, "memory": 4024, "data_time": 0.04627, "loss_rpn_cls": 0.02535, "loss_rpn_bbox": 0.00836, "s0.loss_cls": 0.05158, "s0.acc": 98.54297, "s0.loss_bbox": 0.02477, "s1.loss_cls": 0.0208, "s1.acc": 98.77539, "s1.loss_bbox": 0.02504, "s2.loss_cls": 0.01002, "s2.acc": 98.76758, "s2.loss_bbox": 0.01861, "loss": 0.18451, "time": 0.37293}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.02, "memory": 4024, "data_time": 0.00395, "loss_rpn_cls": 0.01352, "loss_rpn_bbox": 0.00467, "s0.loss_cls": 0.05696, "s0.acc": 98.38672, "s0.loss_bbox": 0.02728, "s1.loss_cls": 0.02486, "s1.acc": 98.52344, "s1.loss_bbox": 0.03343, "s2.loss_cls": 0.01189, "s2.acc": 98.46875, "s2.loss_bbox": 0.02374, "loss": 0.19634, "time": 0.33306}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.02, "memory": 4024, "data_time": 0.00392, "loss_rpn_cls": 0.01138, "loss_rpn_bbox": 0.00665, "s0.loss_cls": 0.05366, "s0.acc": 98.42773, "s0.loss_bbox": 0.02433, "s1.loss_cls": 0.02546, "s1.acc": 98.49023, "s1.loss_bbox": 0.03145, "s2.loss_cls": 0.01134, "s2.acc": 98.5957, "s2.loss_bbox": 0.02261, "loss": 0.18688, "time": 0.33087}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.02, "memory": 4024, "data_time": 0.00389, "loss_rpn_cls": 0.01073, "loss_rpn_bbox": 0.00457, "s0.loss_cls": 0.05372, "s0.acc": 98.41992, "s0.loss_bbox": 0.02632, "s1.loss_cls": 0.02523, "s1.acc": 98.46875, "s1.loss_bbox": 0.03272, "s2.loss_cls": 0.01148, "s2.acc": 98.39062, "s2.loss_bbox": 0.0233, "loss": 0.18807, "time": 0.33}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.02, "memory": 4024, "data_time": 0.00386, "loss_rpn_cls": 0.0157, "loss_rpn_bbox": 0.00594, "s0.loss_cls": 0.05365, "s0.acc": 98.55664, "s0.loss_bbox": 0.0232, "s1.loss_cls": 0.02335, "s1.acc": 98.66797, "s1.loss_bbox": 0.0295, "s2.loss_cls": 0.01068, "s2.acc": 98.81641, "s2.loss_bbox": 0.02087, "loss": 0.1829, "time": 0.33113}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.02, "memory": 4024, "data_time": 0.00392, "loss_rpn_cls": 0.01804, "loss_rpn_bbox": 0.00609, "s0.loss_cls": 0.04676, "s0.acc": 98.70898, "s0.loss_bbox": 0.02246, "s1.loss_cls": 0.02101, "s1.acc": 98.76367, "s1.loss_bbox": 0.0282, "s2.loss_cls": 0.00918, "s2.acc": 98.93359, "s2.loss_bbox": 0.02075, "loss": 0.17249, "time": 0.32707}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.02, "memory": 4024, "data_time": 0.00404, "loss_rpn_cls": 0.01742, "loss_rpn_bbox": 0.00592, "s0.loss_cls": 0.04418, "s0.acc": 98.70508, "s0.loss_bbox": 0.02019, "s1.loss_cls": 0.02184, "s1.acc": 98.60742, "s1.loss_bbox": 0.02625, "s2.loss_cls": 0.01086, "s2.acc": 98.40039, "s2.loss_bbox": 0.01997, "loss": 0.16662, "time": 0.32871}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.02, "memory": 4024, "data_time": 0.00376, "loss_rpn_cls": 0.01692, "loss_rpn_bbox": 0.00488, "s0.loss_cls": 0.04872, "s0.acc": 98.48828, "s0.loss_bbox": 0.02423, "s1.loss_cls": 0.02379, "s1.acc": 98.35742, "s1.loss_bbox": 0.0291, "s2.loss_cls": 0.01101, "s2.acc": 98.42969, "s2.loss_bbox": 0.02117, "loss": 0.17982, "time": 0.33021}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.02, "memory": 4024, "data_time": 0.00403, "loss_rpn_cls": 0.01335, "loss_rpn_bbox": 0.00642, "s0.loss_cls": 0.0532, "s0.acc": 98.55273, "s0.loss_bbox": 0.02284, "s1.loss_cls": 0.0239, "s1.acc": 98.65039, "s1.loss_bbox": 0.02614, "s2.loss_cls": 0.0103, "s2.acc": 98.83594, "s2.loss_bbox": 0.01814, "loss": 0.17427, "time": 0.33092}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.02, "memory": 4024, "data_time": 0.00424, "loss_rpn_cls": 0.02228, "loss_rpn_bbox": 0.00856, "s0.loss_cls": 0.05772, "s0.acc": 98.48047, "s0.loss_bbox": 0.02711, "s1.loss_cls": 0.02629, "s1.acc": 98.49023, "s1.loss_bbox": 0.02995, "s2.loss_cls": 0.01161, "s2.acc": 98.61914, "s2.loss_bbox": 0.01977, "loss": 0.20329, "time": 0.32951}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.02, "memory": 4024, "data_time": 0.00407, "loss_rpn_cls": 0.01494, "loss_rpn_bbox": 0.00907, "s0.loss_cls": 0.04748, "s0.acc": 98.6582, "s0.loss_bbox": 0.02368, "s1.loss_cls": 0.02148, "s1.acc": 98.73242, "s1.loss_bbox": 0.02911, "s2.loss_cls": 0.00955, "s2.acc": 98.79688, "s2.loss_bbox": 0.02009, "loss": 0.17539, "time": 0.33043}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.02, "memory": 4024, "data_time": 0.0039, "loss_rpn_cls": 0.0122, "loss_rpn_bbox": 0.00405, "s0.loss_cls": 0.04906, "s0.acc": 98.58594, "s0.loss_bbox": 0.02572, "s1.loss_cls": 0.02422, "s1.acc": 98.42383, "s1.loss_bbox": 0.0358, "s2.loss_cls": 0.01205, "s2.acc": 98.45117, "s2.loss_bbox": 0.0279, "loss": 0.191, "time": 0.33245}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.02, "memory": 4024, "data_time": 0.00383, "loss_rpn_cls": 0.01485, "loss_rpn_bbox": 0.00491, "s0.loss_cls": 0.05236, "s0.acc": 98.43945, "s0.loss_bbox": 0.02353, "s1.loss_cls": 0.02589, "s1.acc": 98.39062, "s1.loss_bbox": 0.03306, "s2.loss_cls": 0.01207, "s2.acc": 98.4082, "s2.loss_bbox": 0.02633, "loss": 0.19299, "time": 0.33088}
