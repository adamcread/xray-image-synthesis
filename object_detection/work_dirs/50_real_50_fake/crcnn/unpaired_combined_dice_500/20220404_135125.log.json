{"env_info": "sys.platform: linux\nPython: 3.8.11 (default, Jul  3 2021, 17:53:42) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2080 Ti\nCUDA_HOME: /apps/cuda/cuda-11.0-cudnn8.0\nNVCC: \nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.7.1+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2+cu110\nOpenCV: 4.5.5\nMMCV: 1.4.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.23.0+21b6da3", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=2,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/composed/50_real_50_fake/helper/annotation/unpaired_combined_dice_500.json',\n        img_prefix=\n        '../dataset/xray/composed/50_real_50_fake/unpaired_combined_dice_500/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = './checkpoints/cascade_rcnn_r101_fpn_1x_coco_20200317-0b6a2fbf.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('FIREARM', 'KNIFE')\nwork_dir = 'work_dirs/50_real_50_fake/crcnn/unpaired_combined_dice_500/'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 201871877, "exp_name": "crcnn_config.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 4026, "data_time": 0.04812, "loss_rpn_cls": 0.06368, "loss_rpn_bbox": 0.00861, "s0.loss_cls": 0.29369, "s0.acc": 91.19336, "s0.loss_bbox": 0.03282, "s1.loss_cls": 0.13648, "s1.acc": 96.0, "s1.loss_bbox": 0.02061, "s2.loss_cls": 0.08893, "s2.acc": 83.66211, "s2.loss_bbox": 0.00768, "loss": 0.65249, "time": 0.38262}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 4026, "data_time": 0.00413, "loss_rpn_cls": 0.03081, "loss_rpn_bbox": 0.00847, "s0.loss_cls": 0.11655, "s0.acc": 97.24609, "s0.loss_bbox": 0.04484, "s1.loss_cls": 0.05028, "s1.acc": 97.66797, "s1.loss_bbox": 0.03175, "s2.loss_cls": 0.02025, "s2.acc": 98.33594, "s2.loss_bbox": 0.01049, "loss": 0.31345, "time": 0.32769}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 4026, "data_time": 0.0043, "loss_rpn_cls": 0.02247, "loss_rpn_bbox": 0.00463, "s0.loss_cls": 0.1173, "s0.acc": 97.05469, "s0.loss_bbox": 0.04848, "s1.loss_cls": 0.05096, "s1.acc": 97.3457, "s1.loss_bbox": 0.03604, "s2.loss_cls": 0.02057, "s2.acc": 98.07812, "s2.loss_bbox": 0.01323, "loss": 0.31368, "time": 0.33259}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 4026, "data_time": 0.00419, "loss_rpn_cls": 0.03247, "loss_rpn_bbox": 0.00761, "s0.loss_cls": 0.0996, "s0.acc": 97.47852, "s0.loss_bbox": 0.04033, "s1.loss_cls": 0.04352, "s1.acc": 97.63672, "s1.loss_bbox": 0.0297, "s2.loss_cls": 0.01747, "s2.acc": 98.02734, "s2.loss_bbox": 0.01119, "loss": 0.28188, "time": 0.3354}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 4026, "data_time": 0.00409, "loss_rpn_cls": 0.03639, "loss_rpn_bbox": 0.00985, "s0.loss_cls": 0.09709, "s0.acc": 97.67773, "s0.loss_bbox": 0.03943, "s1.loss_cls": 0.03987, "s1.acc": 98.01367, "s1.loss_bbox": 0.03281, "s2.loss_cls": 0.01667, "s2.acc": 98.12891, "s2.loss_bbox": 0.01402, "loss": 0.28614, "time": 0.33902}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 4026, "data_time": 0.00419, "loss_rpn_cls": 0.03046, "loss_rpn_bbox": 0.00984, "s0.loss_cls": 0.07803, "s0.acc": 97.87305, "s0.loss_bbox": 0.03118, "s1.loss_cls": 0.03429, "s1.acc": 97.95508, "s1.loss_bbox": 0.02668, "s2.loss_cls": 0.0154, "s2.acc": 98.20117, "s2.loss_bbox": 0.01366, "loss": 0.23955, "time": 0.34362}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 4026, "data_time": 0.00421, "loss_rpn_cls": 0.02407, "loss_rpn_bbox": 0.00967, "s0.loss_cls": 0.07405, "s0.acc": 98.00781, "s0.loss_bbox": 0.03086, "s1.loss_cls": 0.0338, "s1.acc": 97.85938, "s1.loss_bbox": 0.03314, "s2.loss_cls": 0.01526, "s2.acc": 98.11719, "s2.loss_bbox": 0.01635, "loss": 0.2372, "time": 0.34683}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 4026, "data_time": 0.00437, "loss_rpn_cls": 0.03499, "loss_rpn_bbox": 0.01111, "s0.loss_cls": 0.09644, "s0.acc": 97.66992, "s0.loss_bbox": 0.03681, "s1.loss_cls": 0.04048, "s1.acc": 97.94922, "s1.loss_bbox": 0.03042, "s2.loss_cls": 0.01697, "s2.acc": 98.19336, "s2.loss_bbox": 0.01387, "loss": 0.28108, "time": 0.34491}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 4026, "data_time": 0.00416, "loss_rpn_cls": 0.03129, "loss_rpn_bbox": 0.0108, "s0.loss_cls": 0.08498, "s0.acc": 97.9082, "s0.loss_bbox": 0.0366, "s1.loss_cls": 0.03649, "s1.acc": 98.06836, "s1.loss_bbox": 0.03324, "s2.loss_cls": 0.01562, "s2.acc": 98.31055, "s2.loss_bbox": 0.0163, "loss": 0.26532, "time": 0.3441}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 4026, "data_time": 0.00451, "loss_rpn_cls": 0.03244, "loss_rpn_bbox": 0.00946, "s0.loss_cls": 0.08687, "s0.acc": 97.89453, "s0.loss_bbox": 0.03388, "s1.loss_cls": 0.03629, "s1.acc": 98.05078, "s1.loss_bbox": 0.02925, "s2.loss_cls": 0.01441, "s2.acc": 98.40625, "s2.loss_bbox": 0.01301, "loss": 0.25561, "time": 0.33797}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 4026, "data_time": 0.00449, "loss_rpn_cls": 0.03279, "loss_rpn_bbox": 0.01309, "s0.loss_cls": 0.06807, "s0.acc": 98.08008, "s0.loss_bbox": 0.03029, "s1.loss_cls": 0.03209, "s1.acc": 98.13086, "s1.loss_bbox": 0.02849, "s2.loss_cls": 0.01464, "s2.acc": 98.01758, "s2.loss_bbox": 0.01666, "loss": 0.23612, "time": 0.33856}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.02, "memory": 4026, "data_time": 0.00464, "loss_rpn_cls": 0.02683, "loss_rpn_bbox": 0.00872, "s0.loss_cls": 0.0762, "s0.acc": 97.97852, "s0.loss_bbox": 0.03142, "s1.loss_cls": 0.03357, "s1.acc": 98.11719, "s1.loss_bbox": 0.03096, "s2.loss_cls": 0.01477, "s2.acc": 98.25, "s2.loss_bbox": 0.01755, "loss": 0.24002, "time": 0.35306}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.02, "memory": 4026, "data_time": 0.00452, "loss_rpn_cls": 0.03005, "loss_rpn_bbox": 0.00989, "s0.loss_cls": 0.07327, "s0.acc": 98.07422, "s0.loss_bbox": 0.02743, "s1.loss_cls": 0.03249, "s1.acc": 98.18359, "s1.loss_bbox": 0.02613, "s2.loss_cls": 0.0145, "s2.acc": 98.19727, "s2.loss_bbox": 0.01558, "loss": 0.22935, "time": 0.35887}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.02, "memory": 4026, "data_time": 0.00439, "loss_rpn_cls": 0.03951, "loss_rpn_bbox": 0.01137, "s0.loss_cls": 0.07131, "s0.acc": 98.21484, "s0.loss_bbox": 0.02763, "s1.loss_cls": 0.03268, "s1.acc": 98.30078, "s1.loss_bbox": 0.02652, "s2.loss_cls": 0.01455, "s2.acc": 98.2793, "s2.loss_bbox": 0.01608, "loss": 0.23966, "time": 0.35688}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.02, "memory": 4026, "data_time": 0.0044, "loss_rpn_cls": 0.02625, "loss_rpn_bbox": 0.00733, "s0.loss_cls": 0.07194, "s0.acc": 98.17188, "s0.loss_bbox": 0.02769, "s1.loss_cls": 0.03266, "s1.acc": 98.16016, "s1.loss_bbox": 0.02891, "s2.loss_cls": 0.01462, "s2.acc": 98.38867, "s2.loss_bbox": 0.01793, "loss": 0.22733, "time": 0.34632}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.02, "memory": 4026, "data_time": 0.0043, "loss_rpn_cls": 0.01942, "loss_rpn_bbox": 0.00469, "s0.loss_cls": 0.07582, "s0.acc": 97.9082, "s0.loss_bbox": 0.03181, "s1.loss_cls": 0.03579, "s1.acc": 97.8418, "s1.loss_bbox": 0.03549, "s2.loss_cls": 0.01544, "s2.acc": 97.99805, "s2.loss_bbox": 0.0204, "loss": 0.23884, "time": 0.34536}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.02, "memory": 4026, "data_time": 0.00439, "loss_rpn_cls": 0.02598, "loss_rpn_bbox": 0.00636, "s0.loss_cls": 0.07501, "s0.acc": 98.0, "s0.loss_bbox": 0.03425, "s1.loss_cls": 0.03507, "s1.acc": 98.05469, "s1.loss_bbox": 0.03658, "s2.loss_cls": 0.01473, "s2.acc": 98.32812, "s2.loss_bbox": 0.01971, "loss": 0.2477, "time": 0.33707}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.02, "memory": 4026, "data_time": 0.00454, "loss_rpn_cls": 0.02627, "loss_rpn_bbox": 0.00863, "s0.loss_cls": 0.0826, "s0.acc": 97.86914, "s0.loss_bbox": 0.03387, "s1.loss_cls": 0.0353, "s1.acc": 97.93359, "s1.loss_bbox": 0.03445, "s2.loss_cls": 0.01515, "s2.acc": 97.97852, "s2.loss_bbox": 0.02246, "loss": 0.25873, "time": 0.35246}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.02, "memory": 4026, "data_time": 0.00482, "loss_rpn_cls": 0.02261, "loss_rpn_bbox": 0.00792, "s0.loss_cls": 0.0813, "s0.acc": 97.9375, "s0.loss_bbox": 0.03693, "s1.loss_cls": 0.03372, "s1.acc": 98.15625, "s1.loss_bbox": 0.03366, "s2.loss_cls": 0.01501, "s2.acc": 98.0625, "s2.loss_bbox": 0.01784, "loss": 0.24899, "time": 0.35209}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.02, "memory": 4026, "data_time": 0.00476, "loss_rpn_cls": 0.03055, "loss_rpn_bbox": 0.01145, "s0.loss_cls": 0.0639, "s0.acc": 98.36523, "s0.loss_bbox": 0.02587, "s1.loss_cls": 0.0281, "s1.acc": 98.50781, "s1.loss_bbox": 0.02887, "s2.loss_cls": 0.01261, "s2.acc": 98.51172, "s2.loss_bbox": 0.01758, "loss": 0.21893, "time": 0.35989}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.02, "memory": 4026, "data_time": 0.00459, "loss_rpn_cls": 0.04231, "loss_rpn_bbox": 0.01059, "s0.loss_cls": 0.06352, "s0.acc": 98.24219, "s0.loss_bbox": 0.02793, "s1.loss_cls": 0.02901, "s1.acc": 98.45312, "s1.loss_bbox": 0.03215, "s2.loss_cls": 0.01258, "s2.acc": 98.61523, "s2.loss_bbox": 0.01836, "loss": 0.23646, "time": 0.35353}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.02, "memory": 4026, "data_time": 0.00447, "loss_rpn_cls": 0.02469, "loss_rpn_bbox": 0.007, "s0.loss_cls": 0.06262, "s0.acc": 98.29102, "s0.loss_bbox": 0.03007, "s1.loss_cls": 0.02891, "s1.acc": 98.35547, "s1.loss_bbox": 0.03381, "s2.loss_cls": 0.01302, "s2.acc": 98.35547, "s2.loss_bbox": 0.01947, "loss": 0.21957, "time": 0.35412}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.02, "memory": 4026, "data_time": 0.00437, "loss_rpn_cls": 0.02558, "loss_rpn_bbox": 0.00715, "s0.loss_cls": 0.07307, "s0.acc": 98.04688, "s0.loss_bbox": 0.03194, "s1.loss_cls": 0.03371, "s1.acc": 98.14648, "s1.loss_bbox": 0.03092, "s2.loss_cls": 0.01443, "s2.acc": 98.26172, "s2.loss_bbox": 0.01761, "loss": 0.23442, "time": 0.34621}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.02, "memory": 4026, "data_time": 0.00429, "loss_rpn_cls": 0.02121, "loss_rpn_bbox": 0.00758, "s0.loss_cls": 0.07493, "s0.acc": 97.82227, "s0.loss_bbox": 0.03674, "s1.loss_cls": 0.03674, "s1.acc": 97.64258, "s1.loss_bbox": 0.04254, "s2.loss_cls": 0.01558, "s2.acc": 98.10547, "s2.loss_bbox": 0.02569, "loss": 0.26102, "time": 0.34402}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.02, "memory": 4026, "data_time": 0.00458, "loss_rpn_cls": 0.02611, "loss_rpn_bbox": 0.00729, "s0.loss_cls": 0.0746, "s0.acc": 97.96484, "s0.loss_bbox": 0.03486, "s1.loss_cls": 0.03339, "s1.acc": 97.98047, "s1.loss_bbox": 0.03755, "s2.loss_cls": 0.0151, "s2.acc": 97.9707, "s2.loss_bbox": 0.0208, "loss": 0.24971, "time": 0.34569}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.02, "memory": 4026, "data_time": 0.0043, "loss_rpn_cls": 0.02817, "loss_rpn_bbox": 0.00706, "s0.loss_cls": 0.0738, "s0.acc": 98.04492, "s0.loss_bbox": 0.03345, "s1.loss_cls": 0.03265, "s1.acc": 98.16016, "s1.loss_bbox": 0.03151, "s2.loss_cls": 0.01383, "s2.acc": 98.30273, "s2.loss_bbox": 0.01725, "loss": 0.2377, "time": 0.34513}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.02, "memory": 4027, "data_time": 0.00458, "loss_rpn_cls": 0.02328, "loss_rpn_bbox": 0.00549, "s0.loss_cls": 0.06879, "s0.acc": 98.19531, "s0.loss_bbox": 0.03155, "s1.loss_cls": 0.03104, "s1.acc": 98.37109, "s1.loss_bbox": 0.03495, "s2.loss_cls": 0.01429, "s2.acc": 98.24805, "s2.loss_bbox": 0.02177, "loss": 0.23117, "time": 0.34074}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.02, "memory": 4027, "data_time": 0.00658, "loss_rpn_cls": 0.02005, "loss_rpn_bbox": 0.00686, "s0.loss_cls": 0.06056, "s0.acc": 98.19922, "s0.loss_bbox": 0.02549, "s1.loss_cls": 0.03048, "s1.acc": 98.03516, "s1.loss_bbox": 0.03336, "s2.loss_cls": 0.01459, "s2.acc": 97.89062, "s2.loss_bbox": 0.0231, "loss": 0.21449, "time": 0.34485}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.02, "memory": 4027, "data_time": 0.00442, "loss_rpn_cls": 0.01793, "loss_rpn_bbox": 0.00687, "s0.loss_cls": 0.06631, "s0.acc": 98.17773, "s0.loss_bbox": 0.02887, "s1.loss_cls": 0.03205, "s1.acc": 98.13281, "s1.loss_bbox": 0.03351, "s2.loss_cls": 0.01437, "s2.acc": 98.16211, "s2.loss_bbox": 0.02086, "loss": 0.22076, "time": 0.34595}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.02, "memory": 4027, "data_time": 0.00431, "loss_rpn_cls": 0.02189, "loss_rpn_bbox": 0.01058, "s0.loss_cls": 0.05965, "s0.acc": 98.30859, "s0.loss_bbox": 0.0279, "s1.loss_cls": 0.02923, "s1.acc": 98.17773, "s1.loss_bbox": 0.03352, "s2.loss_cls": 0.01378, "s2.acc": 98.23242, "s2.loss_bbox": 0.0225, "loss": 0.21905, "time": 0.36036}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.02, "memory": 4027, "data_time": 0.00458, "loss_rpn_cls": 0.02669, "loss_rpn_bbox": 0.00721, "s0.loss_cls": 0.06876, "s0.acc": 98.14844, "s0.loss_bbox": 0.03078, "s1.loss_cls": 0.02905, "s1.acc": 98.16602, "s1.loss_bbox": 0.03221, "s2.loss_cls": 0.01291, "s2.acc": 98.38672, "s2.loss_bbox": 0.01997, "loss": 0.22758, "time": 0.36121}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.02, "memory": 4027, "data_time": 0.0047, "loss_rpn_cls": 0.02527, "loss_rpn_bbox": 0.00688, "s0.loss_cls": 0.06205, "s0.acc": 98.30859, "s0.loss_bbox": 0.02776, "s1.loss_cls": 0.0293, "s1.acc": 98.44727, "s1.loss_bbox": 0.03529, "s2.loss_cls": 0.01345, "s2.acc": 98.43164, "s2.loss_bbox": 0.02304, "loss": 0.22303, "time": 0.34911}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.02, "memory": 4027, "data_time": 0.00461, "loss_rpn_cls": 0.03653, "loss_rpn_bbox": 0.00992, "s0.loss_cls": 0.06701, "s0.acc": 98.1875, "s0.loss_bbox": 0.02661, "s1.loss_cls": 0.02898, "s1.acc": 98.24609, "s1.loss_bbox": 0.02716, "s2.loss_cls": 0.01313, "s2.acc": 98.48633, "s2.loss_bbox": 0.01735, "loss": 0.22669, "time": 0.34891}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.02, "memory": 4027, "data_time": 0.00464, "loss_rpn_cls": 0.02287, "loss_rpn_bbox": 0.00683, "s0.loss_cls": 0.07023, "s0.acc": 97.99805, "s0.loss_bbox": 0.03136, "s1.loss_cls": 0.03352, "s1.acc": 97.89258, "s1.loss_bbox": 0.03751, "s2.loss_cls": 0.01466, "s2.acc": 98.10156, "s2.loss_bbox": 0.02023, "loss": 0.23721, "time": 0.34655}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.02, "memory": 4027, "data_time": 0.00438, "loss_rpn_cls": 0.03173, "loss_rpn_bbox": 0.00973, "s0.loss_cls": 0.05949, "s0.acc": 98.37305, "s0.loss_bbox": 0.02391, "s1.loss_cls": 0.02849, "s1.acc": 98.30859, "s1.loss_bbox": 0.03003, "s2.loss_cls": 0.01266, "s2.acc": 98.375, "s2.loss_bbox": 0.01941, "loss": 0.21545, "time": 0.34231}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.02, "memory": 4027, "data_time": 0.00439, "loss_rpn_cls": 0.02828, "loss_rpn_bbox": 0.01009, "s0.loss_cls": 0.06025, "s0.acc": 98.41406, "s0.loss_bbox": 0.02586, "s1.loss_cls": 0.02818, "s1.acc": 98.46875, "s1.loss_bbox": 0.02781, "s2.loss_cls": 0.01231, "s2.acc": 98.48633, "s2.loss_bbox": 0.01807, "loss": 0.21084, "time": 0.34659}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.02, "memory": 4027, "data_time": 0.00417, "loss_rpn_cls": 0.02126, "loss_rpn_bbox": 0.00762, "s0.loss_cls": 0.06948, "s0.acc": 98.27539, "s0.loss_bbox": 0.03168, "s1.loss_cls": 0.03199, "s1.acc": 98.18555, "s1.loss_bbox": 0.03315, "s2.loss_cls": 0.01363, "s2.acc": 98.39844, "s2.loss_bbox": 0.01974, "loss": 0.22855, "time": 0.33208}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.02, "memory": 4027, "data_time": 0.00421, "loss_rpn_cls": 0.02772, "loss_rpn_bbox": 0.0098, "s0.loss_cls": 0.0668, "s0.acc": 98.22266, "s0.loss_bbox": 0.02786, "s1.loss_cls": 0.03036, "s1.acc": 98.19727, "s1.loss_bbox": 0.03299, "s2.loss_cls": 0.01303, "s2.acc": 98.27148, "s2.loss_bbox": 0.02014, "loss": 0.2287, "time": 0.34046}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.02, "memory": 4027, "data_time": 0.00437, "loss_rpn_cls": 0.02825, "loss_rpn_bbox": 0.00691, "s0.loss_cls": 0.0749, "s0.acc": 98.07031, "s0.loss_bbox": 0.03821, "s1.loss_cls": 0.03183, "s1.acc": 98.33789, "s1.loss_bbox": 0.03942, "s2.loss_cls": 0.0144, "s2.acc": 98.06445, "s2.loss_bbox": 0.01972, "loss": 0.25364, "time": 0.34049}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.02, "memory": 4027, "data_time": 0.00443, "loss_rpn_cls": 0.0332, "loss_rpn_bbox": 0.01037, "s0.loss_cls": 0.06456, "s0.acc": 98.21289, "s0.loss_bbox": 0.03019, "s1.loss_cls": 0.02855, "s1.acc": 98.35742, "s1.loss_bbox": 0.03219, "s2.loss_cls": 0.01201, "s2.acc": 98.52344, "s2.loss_bbox": 0.01855, "loss": 0.22963, "time": 0.34561}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.02, "memory": 4027, "data_time": 0.00429, "loss_rpn_cls": 0.02108, "loss_rpn_bbox": 0.00792, "s0.loss_cls": 0.06684, "s0.acc": 98.0, "s0.loss_bbox": 0.03021, "s1.loss_cls": 0.03027, "s1.acc": 98.19727, "s1.loss_bbox": 0.035, "s2.loss_cls": 0.01391, "s2.acc": 98.3125, "s2.loss_bbox": 0.02283, "loss": 0.22807, "time": 0.34368}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.02, "memory": 4027, "data_time": 0.00448, "loss_rpn_cls": 0.02256, "loss_rpn_bbox": 0.00564, "s0.loss_cls": 0.06837, "s0.acc": 98.20703, "s0.loss_bbox": 0.03094, "s1.loss_cls": 0.02824, "s1.acc": 98.45508, "s1.loss_bbox": 0.03456, "s2.loss_cls": 0.01223, "s2.acc": 98.52539, "s2.loss_bbox": 0.0218, "loss": 0.22435, "time": 0.34188}
{"mode": "val", "epoch": 1, "iter": 1918, "lr": 0.02, "bbox_mAP": 0.359, "bbox_mAP_50": 0.551, "bbox_mAP_75": 0.441, "bbox_mAP_s": 0.365, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.359 0.551 0.441 0.365 -1.000 -1.000"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.02, "memory": 4027, "data_time": 0.04891, "loss_rpn_cls": 0.02413, "loss_rpn_bbox": 0.00917, "s0.loss_cls": 0.07377, "s0.acc": 97.85742, "s0.loss_bbox": 0.03241, "s1.loss_cls": 0.03189, "s1.acc": 98.08594, "s1.loss_bbox": 0.03598, "s2.loss_cls": 0.01361, "s2.acc": 98.2832, "s2.loss_bbox": 0.0216, "loss": 0.24257, "time": 0.38452}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.02, "memory": 4027, "data_time": 0.00455, "loss_rpn_cls": 0.0251, "loss_rpn_bbox": 0.00601, "s0.loss_cls": 0.07064, "s0.acc": 98.10547, "s0.loss_bbox": 0.03139, "s1.loss_cls": 0.03151, "s1.acc": 98.1875, "s1.loss_bbox": 0.03581, "s2.loss_cls": 0.01393, "s2.acc": 98.18945, "s2.loss_bbox": 0.02251, "loss": 0.23691, "time": 0.34479}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.02, "memory": 4027, "data_time": 0.0045, "loss_rpn_cls": 0.01573, "loss_rpn_bbox": 0.00576, "s0.loss_cls": 0.06718, "s0.acc": 98.07227, "s0.loss_bbox": 0.02885, "s1.loss_cls": 0.03183, "s1.acc": 98.05859, "s1.loss_bbox": 0.03323, "s2.loss_cls": 0.01432, "s2.acc": 98.22852, "s2.loss_bbox": 0.02304, "loss": 0.21994, "time": 0.3359}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.02, "memory": 4027, "data_time": 0.00436, "loss_rpn_cls": 0.02949, "loss_rpn_bbox": 0.00785, "s0.loss_cls": 0.05555, "s0.acc": 98.52344, "s0.loss_bbox": 0.02621, "s1.loss_cls": 0.0241, "s1.acc": 98.68945, "s1.loss_bbox": 0.02899, "s2.loss_cls": 0.01126, "s2.acc": 98.72852, "s2.loss_bbox": 0.01999, "loss": 0.20344, "time": 0.34402}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.02, "memory": 4027, "data_time": 0.00549, "loss_rpn_cls": 0.02194, "loss_rpn_bbox": 0.00957, "s0.loss_cls": 0.05703, "s0.acc": 98.52148, "s0.loss_bbox": 0.02601, "s1.loss_cls": 0.02481, "s1.acc": 98.58203, "s1.loss_bbox": 0.02859, "s2.loss_cls": 0.01086, "s2.acc": 98.70312, "s2.loss_bbox": 0.01908, "loss": 0.19788, "time": 0.36088}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.02, "memory": 4027, "data_time": 0.00484, "loss_rpn_cls": 0.0195, "loss_rpn_bbox": 0.00582, "s0.loss_cls": 0.05538, "s0.acc": 98.49023, "s0.loss_bbox": 0.02562, "s1.loss_cls": 0.02523, "s1.acc": 98.5332, "s1.loss_bbox": 0.03343, "s2.loss_cls": 0.01114, "s2.acc": 98.66406, "s2.loss_bbox": 0.02119, "loss": 0.1973, "time": 0.35059}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.02, "memory": 4027, "data_time": 0.0044, "loss_rpn_cls": 0.02034, "loss_rpn_bbox": 0.00556, "s0.loss_cls": 0.06367, "s0.acc": 98.40039, "s0.loss_bbox": 0.02868, "s1.loss_cls": 0.02615, "s1.acc": 98.58008, "s1.loss_bbox": 0.03048, "s2.loss_cls": 0.01097, "s2.acc": 98.66211, "s2.loss_bbox": 0.01799, "loss": 0.20385, "time": 0.34337}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.02, "memory": 4027, "data_time": 0.00467, "loss_rpn_cls": 0.02126, "loss_rpn_bbox": 0.00784, "s0.loss_cls": 0.05921, "s0.acc": 98.39062, "s0.loss_bbox": 0.02787, "s1.loss_cls": 0.02548, "s1.acc": 98.6582, "s1.loss_bbox": 0.03256, "s2.loss_cls": 0.01067, "s2.acc": 98.69141, "s2.loss_bbox": 0.02034, "loss": 0.20524, "time": 0.35431}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.02, "memory": 4027, "data_time": 0.00451, "loss_rpn_cls": 0.02021, "loss_rpn_bbox": 0.0096, "s0.loss_cls": 0.06944, "s0.acc": 98.02344, "s0.loss_bbox": 0.031, "s1.loss_cls": 0.03287, "s1.acc": 98.04492, "s1.loss_bbox": 0.03882, "s2.loss_cls": 0.01311, "s2.acc": 98.42383, "s2.loss_bbox": 0.02297, "loss": 0.23801, "time": 0.34046}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.02, "memory": 4027, "data_time": 0.00445, "loss_rpn_cls": 0.03406, "loss_rpn_bbox": 0.01171, "s0.loss_cls": 0.06759, "s0.acc": 98.13086, "s0.loss_bbox": 0.03184, "s1.loss_cls": 0.02999, "s1.acc": 98.14844, "s1.loss_bbox": 0.03171, "s2.loss_cls": 0.01301, "s2.acc": 98.23438, "s2.loss_bbox": 0.01923, "loss": 0.23914, "time": 0.3317}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.02, "memory": 4027, "data_time": 0.00426, "loss_rpn_cls": 0.01793, "loss_rpn_bbox": 0.0065, "s0.loss_cls": 0.05938, "s0.acc": 98.28906, "s0.loss_bbox": 0.0278, "s1.loss_cls": 0.02783, "s1.acc": 98.28711, "s1.loss_bbox": 0.02927, "s2.loss_cls": 0.01343, "s2.acc": 98.21875, "s2.loss_bbox": 0.01945, "loss": 0.2016, "time": 0.34241}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.02, "memory": 4027, "data_time": 0.00423, "loss_rpn_cls": 0.01979, "loss_rpn_bbox": 0.00874, "s0.loss_cls": 0.05609, "s0.acc": 98.44531, "s0.loss_bbox": 0.02695, "s1.loss_cls": 0.02582, "s1.acc": 98.54688, "s1.loss_bbox": 0.03297, "s2.loss_cls": 0.01171, "s2.acc": 98.5, "s2.loss_bbox": 0.02098, "loss": 0.20305, "time": 0.33368}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.02, "memory": 4027, "data_time": 0.00459, "loss_rpn_cls": 0.02094, "loss_rpn_bbox": 0.00887, "s0.loss_cls": 0.05164, "s0.acc": 98.57422, "s0.loss_bbox": 0.02648, "s1.loss_cls": 0.02347, "s1.acc": 98.6582, "s1.loss_bbox": 0.03221, "s2.loss_cls": 0.01112, "s2.acc": 98.50977, "s2.loss_bbox": 0.01928, "loss": 0.19401, "time": 0.34885}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.02, "memory": 4027, "data_time": 0.00446, "loss_rpn_cls": 0.02025, "loss_rpn_bbox": 0.00589, "s0.loss_cls": 0.07076, "s0.acc": 98.17578, "s0.loss_bbox": 0.03148, "s1.loss_cls": 0.03203, "s1.acc": 98.15625, "s1.loss_bbox": 0.03728, "s2.loss_cls": 0.01326, "s2.acc": 98.25, "s2.loss_bbox": 0.02251, "loss": 0.23346, "time": 0.34751}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.02, "memory": 4027, "data_time": 0.00459, "loss_rpn_cls": 0.02394, "loss_rpn_bbox": 0.00988, "s0.loss_cls": 0.05249, "s0.acc": 98.48828, "s0.loss_bbox": 0.02622, "s1.loss_cls": 0.02515, "s1.acc": 98.56055, "s1.loss_bbox": 0.03201, "s2.loss_cls": 0.01205, "s2.acc": 98.49609, "s2.loss_bbox": 0.02108, "loss": 0.20282, "time": 0.3509}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.02, "memory": 4027, "data_time": 0.00425, "loss_rpn_cls": 0.01964, "loss_rpn_bbox": 0.00487, "s0.loss_cls": 0.05196, "s0.acc": 98.56836, "s0.loss_bbox": 0.02263, "s1.loss_cls": 0.02517, "s1.acc": 98.54688, "s1.loss_bbox": 0.03143, "s2.loss_cls": 0.0118, "s2.acc": 98.55273, "s2.loss_bbox": 0.02157, "loss": 0.18906, "time": 0.33909}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.02, "memory": 4027, "data_time": 0.00416, "loss_rpn_cls": 0.01609, "loss_rpn_bbox": 0.00433, "s0.loss_cls": 0.05209, "s0.acc": 98.52539, "s0.loss_bbox": 0.02716, "s1.loss_cls": 0.02378, "s1.acc": 98.61914, "s1.loss_bbox": 0.03452, "s2.loss_cls": 0.01071, "s2.acc": 98.64844, "s2.loss_bbox": 0.02164, "loss": 0.19033, "time": 0.34882}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.02, "memory": 4027, "data_time": 0.00407, "loss_rpn_cls": 0.02184, "loss_rpn_bbox": 0.00864, "s0.loss_cls": 0.07335, "s0.acc": 97.87305, "s0.loss_bbox": 0.03544, "s1.loss_cls": 0.03577, "s1.acc": 97.76758, "s1.loss_bbox": 0.04073, "s2.loss_cls": 0.01565, "s2.acc": 97.85742, "s2.loss_bbox": 0.0222, "loss": 0.25361, "time": 0.34562}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.02, "memory": 4027, "data_time": 0.00413, "loss_rpn_cls": 0.0256, "loss_rpn_bbox": 0.00859, "s0.loss_cls": 0.06419, "s0.acc": 98.24023, "s0.loss_bbox": 0.02951, "s1.loss_cls": 0.02866, "s1.acc": 98.39844, "s1.loss_bbox": 0.03245, "s2.loss_cls": 0.0119, "s2.acc": 98.52734, "s2.loss_bbox": 0.02147, "loss": 0.22237, "time": 0.3405}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.02, "memory": 4027, "data_time": 0.0041, "loss_rpn_cls": 0.02095, "loss_rpn_bbox": 0.0063, "s0.loss_cls": 0.06066, "s0.acc": 98.28516, "s0.loss_bbox": 0.02872, "s1.loss_cls": 0.02718, "s1.acc": 98.42383, "s1.loss_bbox": 0.03324, "s2.loss_cls": 0.01224, "s2.acc": 98.41797, "s2.loss_bbox": 0.01995, "loss": 0.20923, "time": 0.33779}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.02, "memory": 4027, "data_time": 0.00425, "loss_rpn_cls": 0.02799, "loss_rpn_bbox": 0.00779, "s0.loss_cls": 0.06239, "s0.acc": 98.29688, "s0.loss_bbox": 0.02795, "s1.loss_cls": 0.0272, "s1.acc": 98.40234, "s1.loss_bbox": 0.02614, "s2.loss_cls": 0.0113, "s2.acc": 98.74023, "s2.loss_bbox": 0.01692, "loss": 0.20767, "time": 0.34528}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.02, "memory": 4027, "data_time": 0.00426, "loss_rpn_cls": 0.01885, "loss_rpn_bbox": 0.00608, "s0.loss_cls": 0.06993, "s0.acc": 98.20703, "s0.loss_bbox": 0.02957, "s1.loss_cls": 0.0322, "s1.acc": 98.33008, "s1.loss_bbox": 0.03581, "s2.loss_cls": 0.01321, "s2.acc": 98.47461, "s2.loss_bbox": 0.02348, "loss": 0.22913, "time": 0.34011}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.02, "memory": 4027, "data_time": 0.00423, "loss_rpn_cls": 0.02407, "loss_rpn_bbox": 0.01206, "s0.loss_cls": 0.0593, "s0.acc": 98.33203, "s0.loss_bbox": 0.02782, "s1.loss_cls": 0.02737, "s1.acc": 98.30469, "s1.loss_bbox": 0.03348, "s2.loss_cls": 0.01179, "s2.acc": 98.57617, "s2.loss_bbox": 0.02114, "loss": 0.21702, "time": 0.34246}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.02, "memory": 4027, "data_time": 0.00435, "loss_rpn_cls": 0.01787, "loss_rpn_bbox": 0.00683, "s0.loss_cls": 0.06241, "s0.acc": 98.14453, "s0.loss_bbox": 0.03065, "s1.loss_cls": 0.02901, "s1.acc": 98.21289, "s1.loss_bbox": 0.03952, "s2.loss_cls": 0.01288, "s2.acc": 98.16602, "s2.loss_bbox": 0.02492, "loss": 0.22409, "time": 0.34015}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.02, "memory": 4027, "data_time": 0.00412, "loss_rpn_cls": 0.01893, "loss_rpn_bbox": 0.00659, "s0.loss_cls": 0.06341, "s0.acc": 98.26758, "s0.loss_bbox": 0.02636, "s1.loss_cls": 0.02734, "s1.acc": 98.43945, "s1.loss_bbox": 0.03091, "s2.loss_cls": 0.01116, "s2.acc": 98.61328, "s2.loss_bbox": 0.02114, "loss": 0.20585, "time": 0.34482}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.02, "memory": 4027, "data_time": 0.00416, "loss_rpn_cls": 0.02296, "loss_rpn_bbox": 0.00703, "s0.loss_cls": 0.06338, "s0.acc": 98.22852, "s0.loss_bbox": 0.02979, "s1.loss_cls": 0.0273, "s1.acc": 98.375, "s1.loss_bbox": 0.03359, "s2.loss_cls": 0.01146, "s2.acc": 98.56836, "s2.loss_bbox": 0.02183, "loss": 0.21733, "time": 0.3403}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.02, "memory": 4027, "data_time": 0.00405, "loss_rpn_cls": 0.01793, "loss_rpn_bbox": 0.0053, "s0.loss_cls": 0.07068, "s0.acc": 98.07617, "s0.loss_bbox": 0.03033, "s1.loss_cls": 0.03235, "s1.acc": 98.18359, "s1.loss_bbox": 0.03651, "s2.loss_cls": 0.01451, "s2.acc": 98.20898, "s2.loss_bbox": 0.0249, "loss": 0.23251, "time": 0.336}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.02, "memory": 4027, "data_time": 0.00452, "loss_rpn_cls": 0.0196, "loss_rpn_bbox": 0.00709, "s0.loss_cls": 0.07118, "s0.acc": 98.10352, "s0.loss_bbox": 0.02991, "s1.loss_cls": 0.03212, "s1.acc": 98.14648, "s1.loss_bbox": 0.03131, "s2.loss_cls": 0.0137, "s2.acc": 98.2168, "s2.loss_bbox": 0.01942, "loss": 0.22434, "time": 0.33822}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.02, "memory": 4027, "data_time": 0.00473, "loss_rpn_cls": 0.01334, "loss_rpn_bbox": 0.00575, "s0.loss_cls": 0.06078, "s0.acc": 98.22656, "s0.loss_bbox": 0.03081, "s1.loss_cls": 0.03005, "s1.acc": 98.25391, "s1.loss_bbox": 0.03852, "s2.loss_cls": 0.01262, "s2.acc": 98.51562, "s2.loss_bbox": 0.02351, "loss": 0.21537, "time": 0.34564}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.02, "memory": 4027, "data_time": 0.00447, "loss_rpn_cls": 0.01788, "loss_rpn_bbox": 0.00715, "s0.loss_cls": 0.06686, "s0.acc": 98.0918, "s0.loss_bbox": 0.03071, "s1.loss_cls": 0.0294, "s1.acc": 98.31055, "s1.loss_bbox": 0.03558, "s2.loss_cls": 0.01199, "s2.acc": 98.53516, "s2.loss_bbox": 0.02362, "loss": 0.2232, "time": 0.34378}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.02, "memory": 4027, "data_time": 0.00448, "loss_rpn_cls": 0.01926, "loss_rpn_bbox": 0.00648, "s0.loss_cls": 0.06875, "s0.acc": 98.20117, "s0.loss_bbox": 0.03057, "s1.loss_cls": 0.03253, "s1.acc": 98.21875, "s1.loss_bbox": 0.0381, "s2.loss_cls": 0.01335, "s2.acc": 98.36133, "s2.loss_bbox": 0.0255, "loss": 0.23454, "time": 0.34219}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.02, "memory": 4027, "data_time": 0.00443, "loss_rpn_cls": 0.01911, "loss_rpn_bbox": 0.00539, "s0.loss_cls": 0.06703, "s0.acc": 98.28711, "s0.loss_bbox": 0.03144, "s1.loss_cls": 0.0282, "s1.acc": 98.49805, "s1.loss_bbox": 0.03587, "s2.loss_cls": 0.01149, "s2.acc": 98.50586, "s2.loss_bbox": 0.02341, "loss": 0.22194, "time": 0.33896}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.02, "memory": 4027, "data_time": 0.00431, "loss_rpn_cls": 0.01992, "loss_rpn_bbox": 0.00839, "s0.loss_cls": 0.06602, "s0.acc": 98.16211, "s0.loss_bbox": 0.03259, "s1.loss_cls": 0.02814, "s1.acc": 98.40234, "s1.loss_bbox": 0.03732, "s2.loss_cls": 0.0122, "s2.acc": 98.47656, "s2.loss_bbox": 0.02248, "loss": 0.22707, "time": 0.34016}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.02, "memory": 4027, "data_time": 0.00477, "loss_rpn_cls": 0.01393, "loss_rpn_bbox": 0.00379, "s0.loss_cls": 0.06583, "s0.acc": 98.21875, "s0.loss_bbox": 0.03205, "s1.loss_cls": 0.02972, "s1.acc": 98.22852, "s1.loss_bbox": 0.03861, "s2.loss_cls": 0.01225, "s2.acc": 98.31445, "s2.loss_bbox": 0.02693, "loss": 0.22311, "time": 0.348}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.02, "memory": 4027, "data_time": 0.00505, "loss_rpn_cls": 0.01956, "loss_rpn_bbox": 0.0052, "s0.loss_cls": 0.0634, "s0.acc": 98.39453, "s0.loss_bbox": 0.03072, "s1.loss_cls": 0.02485, "s1.acc": 98.66992, "s1.loss_bbox": 0.03468, "s2.loss_cls": 0.01018, "s2.acc": 98.76562, "s2.loss_bbox": 0.0223, "loss": 0.21088, "time": 0.34136}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.02, "memory": 4027, "data_time": 0.0048, "loss_rpn_cls": 0.01395, "loss_rpn_bbox": 0.00358, "s0.loss_cls": 0.06488, "s0.acc": 98.26562, "s0.loss_bbox": 0.03084, "s1.loss_cls": 0.02759, "s1.acc": 98.45312, "s1.loss_bbox": 0.03455, "s2.loss_cls": 0.0118, "s2.acc": 98.63281, "s2.loss_bbox": 0.02271, "loss": 0.20991, "time": 0.35116}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.02, "memory": 4027, "data_time": 0.0045, "loss_rpn_cls": 0.02342, "loss_rpn_bbox": 0.01217, "s0.loss_cls": 0.06417, "s0.acc": 98.19531, "s0.loss_bbox": 0.03003, "s1.loss_cls": 0.02757, "s1.acc": 98.28125, "s1.loss_bbox": 0.0332, "s2.loss_cls": 0.01165, "s2.acc": 98.42969, "s2.loss_bbox": 0.02094, "loss": 0.22315, "time": 0.35115}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.02, "memory": 4027, "data_time": 0.00466, "loss_rpn_cls": 0.01556, "loss_rpn_bbox": 0.00543, "s0.loss_cls": 0.06697, "s0.acc": 98.06836, "s0.loss_bbox": 0.02895, "s1.loss_cls": 0.02956, "s1.acc": 98.14258, "s1.loss_bbox": 0.034, "s2.loss_cls": 0.01353, "s2.acc": 98.10352, "s2.loss_bbox": 0.02343, "loss": 0.21743, "time": 0.34158}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.02, "memory": 4027, "data_time": 0.00449, "loss_rpn_cls": 0.02371, "loss_rpn_bbox": 0.00643, "s0.loss_cls": 0.05882, "s0.acc": 98.34961, "s0.loss_bbox": 0.02748, "s1.loss_cls": 0.02521, "s1.acc": 98.51172, "s1.loss_bbox": 0.02874, "s2.loss_cls": 0.01101, "s2.acc": 98.62695, "s2.loss_bbox": 0.0201, "loss": 0.20148, "time": 0.33855}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.02, "memory": 4027, "data_time": 0.00482, "loss_rpn_cls": 0.01876, "loss_rpn_bbox": 0.00826, "s0.loss_cls": 0.06365, "s0.acc": 98.21875, "s0.loss_bbox": 0.0324, "s1.loss_cls": 0.02728, "s1.acc": 98.4043, "s1.loss_bbox": 0.03419, "s2.loss_cls": 0.01199, "s2.acc": 98.47852, "s2.loss_bbox": 0.02194, "loss": 0.21847, "time": 0.35511}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.02, "memory": 4027, "data_time": 0.00472, "loss_rpn_cls": 0.01994, "loss_rpn_bbox": 0.00671, "s0.loss_cls": 0.06286, "s0.acc": 98.29688, "s0.loss_bbox": 0.03052, "s1.loss_cls": 0.02666, "s1.acc": 98.42383, "s1.loss_bbox": 0.03295, "s2.loss_cls": 0.01161, "s2.acc": 98.38672, "s2.loss_bbox": 0.02271, "loss": 0.21397, "time": 0.35141}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.02, "memory": 4027, "data_time": 0.00468, "loss_rpn_cls": 0.02248, "loss_rpn_bbox": 0.0065, "s0.loss_cls": 0.06217, "s0.acc": 98.36719, "s0.loss_bbox": 0.0285, "s1.loss_cls": 0.02672, "s1.acc": 98.60742, "s1.loss_bbox": 0.03139, "s2.loss_cls": 0.01141, "s2.acc": 98.55078, "s2.loss_bbox": 0.01954, "loss": 0.20871, "time": 0.34827}
{"mode": "val", "epoch": 2, "iter": 1918, "lr": 0.02, "bbox_mAP": 0.393, "bbox_mAP_50": 0.584, "bbox_mAP_75": 0.469, "bbox_mAP_s": 0.393, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.393 0.584 0.469 0.393 -1.000 -1.000"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.02, "memory": 4027, "data_time": 0.0488, "loss_rpn_cls": 0.0191, "loss_rpn_bbox": 0.0057, "s0.loss_cls": 0.06694, "s0.acc": 98.28516, "s0.loss_bbox": 0.02851, "s1.loss_cls": 0.02799, "s1.acc": 98.47266, "s1.loss_bbox": 0.03201, "s2.loss_cls": 0.01162, "s2.acc": 98.63867, "s2.loss_bbox": 0.01923, "loss": 0.21111, "time": 0.39445}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.02, "memory": 4027, "data_time": 0.0043, "loss_rpn_cls": 0.01649, "loss_rpn_bbox": 0.00743, "s0.loss_cls": 0.05441, "s0.acc": 98.45117, "s0.loss_bbox": 0.0253, "s1.loss_cls": 0.02504, "s1.acc": 98.5293, "s1.loss_bbox": 0.03251, "s2.loss_cls": 0.01174, "s2.acc": 98.51758, "s2.loss_bbox": 0.02437, "loss": 0.19729, "time": 0.34543}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.02, "memory": 4027, "data_time": 0.00436, "loss_rpn_cls": 0.01868, "loss_rpn_bbox": 0.00576, "s0.loss_cls": 0.05288, "s0.acc": 98.42773, "s0.loss_bbox": 0.0265, "s1.loss_cls": 0.02473, "s1.acc": 98.43359, "s1.loss_bbox": 0.03037, "s2.loss_cls": 0.01141, "s2.acc": 98.50781, "s2.loss_bbox": 0.02122, "loss": 0.19154, "time": 0.34608}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.02, "memory": 4027, "data_time": 0.00442, "loss_rpn_cls": 0.01794, "loss_rpn_bbox": 0.00749, "s0.loss_cls": 0.05769, "s0.acc": 98.36523, "s0.loss_bbox": 0.02652, "s1.loss_cls": 0.02556, "s1.acc": 98.55469, "s1.loss_bbox": 0.03106, "s2.loss_cls": 0.01105, "s2.acc": 98.68945, "s2.loss_bbox": 0.0203, "loss": 0.19761, "time": 0.34283}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.02, "memory": 4027, "data_time": 0.00422, "loss_rpn_cls": 0.01689, "loss_rpn_bbox": 0.00625, "s0.loss_cls": 0.05307, "s0.acc": 98.42188, "s0.loss_bbox": 0.02702, "s1.loss_cls": 0.02422, "s1.acc": 98.5, "s1.loss_bbox": 0.03556, "s2.loss_cls": 0.01043, "s2.acc": 98.78906, "s2.loss_bbox": 0.02491, "loss": 0.19835, "time": 0.33314}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.02, "memory": 4027, "data_time": 0.00417, "loss_rpn_cls": 0.01904, "loss_rpn_bbox": 0.0059, "s0.loss_cls": 0.05199, "s0.acc": 98.58203, "s0.loss_bbox": 0.02448, "s1.loss_cls": 0.02306, "s1.acc": 98.70703, "s1.loss_bbox": 0.02865, "s2.loss_cls": 0.01014, "s2.acc": 98.73242, "s2.loss_bbox": 0.02156, "loss": 0.18482, "time": 0.34128}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.02, "memory": 4027, "data_time": 0.00419, "loss_rpn_cls": 0.01554, "loss_rpn_bbox": 0.0072, "s0.loss_cls": 0.04675, "s0.acc": 98.63086, "s0.loss_bbox": 0.0263, "s1.loss_cls": 0.02047, "s1.acc": 98.74414, "s1.loss_bbox": 0.03571, "s2.loss_cls": 0.00939, "s2.acc": 98.6582, "s2.loss_bbox": 0.02679, "loss": 0.18814, "time": 0.34002}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.02, "memory": 4027, "data_time": 0.00418, "loss_rpn_cls": 0.01636, "loss_rpn_bbox": 0.0054, "s0.loss_cls": 0.06042, "s0.acc": 98.20898, "s0.loss_bbox": 0.02851, "s1.loss_cls": 0.0281, "s1.acc": 98.22266, "s1.loss_bbox": 0.03343, "s2.loss_cls": 0.01292, "s2.acc": 98.13086, "s2.loss_bbox": 0.01994, "loss": 0.20507, "time": 0.34555}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.02, "memory": 4027, "data_time": 0.00434, "loss_rpn_cls": 0.01505, "loss_rpn_bbox": 0.00463, "s0.loss_cls": 0.05531, "s0.acc": 98.44336, "s0.loss_bbox": 0.02654, "s1.loss_cls": 0.02422, "s1.acc": 98.52344, "s1.loss_bbox": 0.02982, "s2.loss_cls": 0.01031, "s2.acc": 98.62109, "s2.loss_bbox": 0.02065, "loss": 0.18655, "time": 0.33614}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.02, "memory": 4027, "data_time": 0.00457, "loss_rpn_cls": 0.0178, "loss_rpn_bbox": 0.00599, "s0.loss_cls": 0.05931, "s0.acc": 98.27734, "s0.loss_bbox": 0.02959, "s1.loss_cls": 0.02482, "s1.acc": 98.52734, "s1.loss_bbox": 0.03341, "s2.loss_cls": 0.01073, "s2.acc": 98.50195, "s2.loss_bbox": 0.02138, "loss": 0.20304, "time": 0.34651}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.02, "memory": 4027, "data_time": 0.00448, "loss_rpn_cls": 0.01363, "loss_rpn_bbox": 0.00669, "s0.loss_cls": 0.06043, "s0.acc": 98.37695, "s0.loss_bbox": 0.02737, "s1.loss_cls": 0.02578, "s1.acc": 98.50586, "s1.loss_bbox": 0.03413, "s2.loss_cls": 0.01106, "s2.acc": 98.52148, "s2.loss_bbox": 0.02055, "loss": 0.19964, "time": 0.34577}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.02, "memory": 4027, "data_time": 0.00443, "loss_rpn_cls": 0.02547, "loss_rpn_bbox": 0.00677, "s0.loss_cls": 0.06305, "s0.acc": 98.10352, "s0.loss_bbox": 0.02556, "s1.loss_cls": 0.02884, "s1.acc": 98.13672, "s1.loss_bbox": 0.02932, "s2.loss_cls": 0.01274, "s2.acc": 98.31055, "s2.loss_bbox": 0.01741, "loss": 0.20916, "time": 0.34965}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.02, "memory": 4027, "data_time": 0.00428, "loss_rpn_cls": 0.01553, "loss_rpn_bbox": 0.00754, "s0.loss_cls": 0.04741, "s0.acc": 98.52539, "s0.loss_bbox": 0.02326, "s1.loss_cls": 0.0232, "s1.acc": 98.45312, "s1.loss_bbox": 0.03263, "s2.loss_cls": 0.01108, "s2.acc": 98.38281, "s2.loss_bbox": 0.02394, "loss": 0.1846, "time": 0.34586}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.02, "memory": 4027, "data_time": 0.00407, "loss_rpn_cls": 0.01447, "loss_rpn_bbox": 0.00654, "s0.loss_cls": 0.0539, "s0.acc": 98.57422, "s0.loss_bbox": 0.0244, "s1.loss_cls": 0.02293, "s1.acc": 98.66602, "s1.loss_bbox": 0.02952, "s2.loss_cls": 0.00967, "s2.acc": 98.84375, "s2.loss_bbox": 0.02136, "loss": 0.18279, "time": 0.33952}
