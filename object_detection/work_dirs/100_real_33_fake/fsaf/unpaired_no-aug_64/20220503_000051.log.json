{"env_info": "sys.platform: linux\nPython: 3.8.11 (default, Jul  3 2021, 17:53:42) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2080 Ti\nCUDA_HOME: /apps/cuda/cuda-11.0-cudnn8.0\nNVCC: Not Available\nGCC: x86_64-linux-gnu-gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.7.0+cu110\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80\n  - CuDNN 8.0.4\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.1+cu110\nOpenCV: 4.5.5\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.22.0+d48ceb8", "config": "model = dict(\n    type='FSAF',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        num_outs=5),\n    bbox_head=dict(\n        type='FSAFHead',\n        num_classes=2,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            octave_base_scale=1,\n            scales_per_octave=1,\n            ratios=[1.0],\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(type='TBLRBBoxCoder', normalizer=4.0),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0,\n            reduction='none'),\n        loss_bbox=dict(\n            type='IoULoss', eps=1e-06, loss_weight=1.0, reduction='none'),\n        reg_decoded_bbox=True),\n    train_cfg=dict(\n        assigner=dict(\n            type='CenterRegionAssigner',\n            pos_scale=0.2,\n            neg_scale=0.2,\n            min_pos_iof=0.01),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/composed/100_real_33_fake/helper/annotation/unpaired_no-aug_64.json',\n        img_prefix=\n        '../dataset/xray/composed/100_real_33_fake/unpaired_no-aug_64/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '../dataset/xray/unpaired/helper/annotation/dbf3_test_resized.json',\n        img_prefix='../dataset/xray/unpaired/resized_128x128/composed_images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('FIREARM', 'KNIFE')))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=10, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = './checkpoints/fsaf_r101_fpn_1x_coco-9e71098f.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('FIREARM', 'KNIFE')\nwork_dir = 'work_dirs/100_real_33_fake/fsaf/unpaired_no-aug_64/'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1343507849, "exp_name": "fsaf_config.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00099, "memory": 3209, "data_time": 0.04948, "loss_cls": 1.05616, "loss_bbox": 0.48948, "num_pos": 6.43, "pos_recall": 50.47923, "loss": 1.54563, "grad_norm": 19.40663, "time": 0.33291}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00199, "memory": 3209, "data_time": 0.00412, "loss_cls": 0.71042, "loss_bbox": 0.3996, "num_pos": 4.52, "pos_recall": 65.44167, "loss": 1.11003, "grad_norm": 16.03129, "time": 0.2862}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00299, "memory": 3209, "data_time": 0.00411, "loss_cls": 0.67124, "loss_bbox": 0.51825, "num_pos": 5.58, "pos_recall": 64.34152, "loss": 1.18949, "grad_norm": 14.57862, "time": 0.28357}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00399, "memory": 3209, "data_time": 0.00404, "loss_cls": 0.59768, "loss_bbox": 0.44091, "num_pos": 5.52, "pos_recall": 74.60976, "loss": 1.03859, "grad_norm": 10.62639, "time": 0.28511}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00499, "memory": 3209, "data_time": 0.00412, "loss_cls": 0.64806, "loss_bbox": 0.55758, "num_pos": 5.96, "pos_recall": 78.78248, "loss": 1.20563, "grad_norm": 8.55166, "time": 0.28247}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00598, "memory": 3209, "data_time": 0.00438, "loss_cls": 0.66564, "loss_bbox": 0.57993, "num_pos": 5.19, "pos_recall": 74.1341, "loss": 1.24557, "grad_norm": 9.43896, "time": 0.28802}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00698, "memory": 3209, "data_time": 0.0041, "loss_cls": 0.64639, "loss_bbox": 0.52405, "num_pos": 5.11, "pos_recall": 76.12745, "loss": 1.17044, "grad_norm": 6.55333, "time": 0.28662}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00798, "memory": 3209, "data_time": 0.00423, "loss_cls": 0.67843, "loss_bbox": 0.61002, "num_pos": 5.8, "pos_recall": 71.40052, "loss": 1.28845, "grad_norm": 6.57057, "time": 0.28634}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00898, "memory": 3209, "data_time": 0.00413, "loss_cls": 0.66217, "loss_bbox": 0.58401, "num_pos": 4.89, "pos_recall": 76.51795, "loss": 1.24618, "grad_norm": 10.62436, "time": 0.28505}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00998, "memory": 3209, "data_time": 0.00424, "loss_cls": 0.67117, "loss_bbox": 0.68585, "num_pos": 4.78, "pos_recall": 70.84671, "loss": 1.35701, "grad_norm": 5.85549, "time": 0.28297}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.01, "memory": 3209, "data_time": 0.004, "loss_cls": 0.72568, "loss_bbox": 0.74088, "num_pos": 4.45, "pos_recall": 59.25621, "loss": 1.46656, "grad_norm": 7.32846, "time": 0.28751}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.01, "memory": 3209, "data_time": 0.00402, "loss_cls": 0.77061, "loss_bbox": 0.843, "num_pos": 5.36, "pos_recall": 52.98482, "loss": 1.61361, "grad_norm": 7.07373, "time": 0.28193}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.01, "memory": 3209, "data_time": 0.01152, "loss_cls": 0.66935, "loss_bbox": 0.7433, "num_pos": 5.69, "pos_recall": 74.18547, "loss": 1.41264, "grad_norm": 5.63477, "time": 0.2947}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.01, "memory": 3209, "data_time": 0.11112, "loss_cls": 0.59647, "loss_bbox": 0.62645, "num_pos": 5.34, "pos_recall": 81.42018, "loss": 1.22292, "grad_norm": 4.22604, "time": 0.39547}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.01, "memory": 3209, "data_time": 0.0045, "loss_cls": 0.58417, "loss_bbox": 0.58035, "num_pos": 5.4, "pos_recall": 82.49738, "loss": 1.16452, "grad_norm": 4.72058, "time": 0.30235}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.01, "memory": 3209, "data_time": 0.00422, "loss_cls": 0.59829, "loss_bbox": 0.63745, "num_pos": 6.02, "pos_recall": 80.27473, "loss": 1.23574, "grad_norm": 4.70394, "time": 0.28601}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.01, "memory": 3209, "data_time": 0.00639, "loss_cls": 0.60147, "loss_bbox": 0.54154, "num_pos": 5.81, "pos_recall": 79.06585, "loss": 1.14301, "grad_norm": 4.96828, "time": 0.28869}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.01, "memory": 3209, "data_time": 0.00419, "loss_cls": 0.62095, "loss_bbox": 0.63033, "num_pos": 5.8, "pos_recall": 88.09376, "loss": 1.25128, "grad_norm": 3.90022, "time": 0.28606}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.01, "memory": 3209, "data_time": 0.00415, "loss_cls": 0.58047, "loss_bbox": 0.60548, "num_pos": 5.35, "pos_recall": 77.59012, "loss": 1.18595, "grad_norm": 4.69922, "time": 0.2852}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.01, "memory": 3209, "data_time": 0.01299, "loss_cls": 0.61579, "loss_bbox": 0.60787, "num_pos": 5.28, "pos_recall": 76.3432, "loss": 1.22366, "grad_norm": 4.32283, "time": 0.29254}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.01, "memory": 3209, "data_time": 0.0041, "loss_cls": 0.59651, "loss_bbox": 0.59477, "num_pos": 5.07, "pos_recall": 85.35879, "loss": 1.19128, "grad_norm": 4.56511, "time": 0.28268}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.01, "memory": 3209, "data_time": 0.0083, "loss_cls": 0.62404, "loss_bbox": 0.58245, "num_pos": 4.81, "pos_recall": 64.30678, "loss": 1.20649, "grad_norm": 4.76395, "time": 0.28936}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.01, "memory": 3209, "data_time": 0.00421, "loss_cls": 0.61725, "loss_bbox": 0.58389, "num_pos": 5.25, "pos_recall": 72.15082, "loss": 1.20115, "grad_norm": 5.11514, "time": 0.28848}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.01, "memory": 3209, "data_time": 0.00428, "loss_cls": 0.55035, "loss_bbox": 0.53512, "num_pos": 5.25, "pos_recall": 79.04274, "loss": 1.08548, "grad_norm": 4.50094, "time": 0.28861}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.01, "memory": 3209, "data_time": 0.00406, "loss_cls": 0.62858, "loss_bbox": 0.65933, "num_pos": 5.46, "pos_recall": 84.85209, "loss": 1.28791, "grad_norm": 5.01335, "time": 0.28519}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.01, "memory": 3209, "data_time": 0.00404, "loss_cls": 0.61423, "loss_bbox": 0.656, "num_pos": 6.36, "pos_recall": 89.73567, "loss": 1.27023, "grad_norm": 5.22881, "time": 0.28674}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.01, "memory": 3209, "data_time": 0.01109, "loss_cls": 0.58011, "loss_bbox": 0.60838, "num_pos": 4.8, "pos_recall": 73.99948, "loss": 1.18849, "grad_norm": 5.33136, "time": 0.29481}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.01, "memory": 3209, "data_time": 0.00399, "loss_cls": 0.58981, "loss_bbox": 0.62503, "num_pos": 5.1, "pos_recall": 78.81735, "loss": 1.21484, "grad_norm": 4.04158, "time": 0.28447}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.01, "memory": 3209, "data_time": 0.00413, "loss_cls": 0.51084, "loss_bbox": 0.60294, "num_pos": 4.88, "pos_recall": 84.53208, "loss": 1.11378, "grad_norm": 4.33973, "time": 0.28667}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.01, "memory": 3209, "data_time": 0.00406, "loss_cls": 0.51272, "loss_bbox": 0.57897, "num_pos": 4.97, "pos_recall": 79.82174, "loss": 1.09168, "grad_norm": 4.38917, "time": 0.28599}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.01, "memory": 3209, "data_time": 0.0041, "loss_cls": 0.59951, "loss_bbox": 0.63839, "num_pos": 4.73, "pos_recall": 81.68019, "loss": 1.2379, "grad_norm": 6.40582, "time": 0.2867}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.01, "memory": 3209, "data_time": 0.00414, "loss_cls": 0.61455, "loss_bbox": 0.63331, "num_pos": 4.51, "pos_recall": 83.3493, "loss": 1.24787, "grad_norm": 3.88506, "time": 0.28514}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.01, "memory": 3209, "data_time": 0.004, "loss_cls": 0.61983, "loss_bbox": 0.74812, "num_pos": 3.9, "pos_recall": 79.06414, "loss": 1.36794, "grad_norm": 5.38342, "time": 0.28647}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.01, "memory": 3209, "data_time": 0.0043, "loss_cls": 0.57342, "loss_bbox": 0.58581, "num_pos": 4.82, "pos_recall": 79.29572, "loss": 1.15923, "grad_norm": 4.13339, "time": 0.28417}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.01, "memory": 3209, "data_time": 0.00421, "loss_cls": 0.52227, "loss_bbox": 0.58875, "num_pos": 4.87, "pos_recall": 90.62511, "loss": 1.11102, "grad_norm": 4.23661, "time": 0.2848}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.01, "memory": 3209, "data_time": 0.00414, "loss_cls": 0.60989, "loss_bbox": 0.62839, "num_pos": 5.0, "pos_recall": 82.13412, "loss": 1.23828, "grad_norm": 3.99762, "time": 0.28463}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.01, "memory": 3209, "data_time": 0.00424, "loss_cls": 0.56193, "loss_bbox": 0.61726, "num_pos": 4.59, "pos_recall": 81.64986, "loss": 1.17918, "grad_norm": 4.12504, "time": 0.29095}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.01, "memory": 3209, "data_time": 0.00417, "loss_cls": 0.53303, "loss_bbox": 0.52364, "num_pos": 5.04, "pos_recall": 88.23455, "loss": 1.05667, "grad_norm": 4.20118, "time": 0.29208}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.01, "memory": 3209, "data_time": 0.00408, "loss_cls": 0.56872, "loss_bbox": 0.60062, "num_pos": 5.03, "pos_recall": 80.99917, "loss": 1.16935, "grad_norm": 5.17937, "time": 0.28989}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.01, "memory": 3209, "data_time": 0.00407, "loss_cls": 0.57181, "loss_bbox": 0.58833, "num_pos": 4.94, "pos_recall": 84.7316, "loss": 1.16015, "grad_norm": 4.39379, "time": 0.28876}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.01, "memory": 3209, "data_time": 0.00416, "loss_cls": 0.56213, "loss_bbox": 0.55253, "num_pos": 4.61, "pos_recall": 82.72421, "loss": 1.11466, "grad_norm": 4.18609, "time": 0.28871}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.01, "memory": 3209, "data_time": 0.00415, "loss_cls": 0.64625, "loss_bbox": 0.79862, "num_pos": 3.85, "pos_recall": 71.30516, "loss": 1.44487, "grad_norm": 6.34458, "time": 0.28986}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.01, "memory": 3209, "data_time": 0.04568, "loss_cls": 0.61958, "loss_bbox": 0.89957, "num_pos": 3.55, "pos_recall": 87.3962, "loss": 1.51915, "grad_norm": 4.06533, "time": 0.32983}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.01, "memory": 3209, "data_time": 0.00415, "loss_cls": 0.60932, "loss_bbox": 0.76794, "num_pos": 4.59, "pos_recall": 82.00203, "loss": 1.37726, "grad_norm": 4.02933, "time": 0.28754}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.01, "memory": 3209, "data_time": 0.00403, "loss_cls": 0.56771, "loss_bbox": 0.69326, "num_pos": 4.84, "pos_recall": 78.71568, "loss": 1.26097, "grad_norm": 3.78433, "time": 0.28564}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.01, "memory": 3209, "data_time": 0.00405, "loss_cls": 0.55454, "loss_bbox": 0.60793, "num_pos": 4.69, "pos_recall": 83.11259, "loss": 1.16248, "grad_norm": 3.98278, "time": 0.28493}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.01, "memory": 3209, "data_time": 0.00406, "loss_cls": 0.52796, "loss_bbox": 0.57412, "num_pos": 4.99, "pos_recall": 85.52569, "loss": 1.10208, "grad_norm": 4.35558, "time": 0.28656}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.01, "memory": 3209, "data_time": 0.0041, "loss_cls": 0.63373, "loss_bbox": 0.68646, "num_pos": 4.39, "pos_recall": 81.23735, "loss": 1.32019, "grad_norm": 5.22687, "time": 0.28731}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.01, "memory": 3209, "data_time": 0.00418, "loss_cls": 0.59955, "loss_bbox": 0.74726, "num_pos": 4.81, "pos_recall": 85.74555, "loss": 1.34681, "grad_norm": 5.1746, "time": 0.28315}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.01, "memory": 3209, "data_time": 0.00427, "loss_cls": 0.58225, "loss_bbox": 0.6274, "num_pos": 4.85, "pos_recall": 85.53013, "loss": 1.20966, "grad_norm": 3.78178, "time": 0.28981}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.01, "memory": 3209, "data_time": 0.0041, "loss_cls": 0.52986, "loss_bbox": 0.56659, "num_pos": 4.94, "pos_recall": 88.87397, "loss": 1.09644, "grad_norm": 3.93376, "time": 0.28761}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.01, "memory": 3209, "data_time": 0.00413, "loss_cls": 0.5945, "loss_bbox": 0.67938, "num_pos": 5.37, "pos_recall": 88.82549, "loss": 1.27388, "grad_norm": 6.80577, "time": 0.28602}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.01, "memory": 3209, "data_time": 0.00409, "loss_cls": 0.53504, "loss_bbox": 0.68095, "num_pos": 4.24, "pos_recall": 86.18225, "loss": 1.21599, "grad_norm": 4.25687, "time": 0.2869}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.01, "memory": 3209, "data_time": 0.00412, "loss_cls": 0.58702, "loss_bbox": 0.73255, "num_pos": 4.74, "pos_recall": 85.51137, "loss": 1.31957, "grad_norm": 4.90115, "time": 0.28916}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.01, "memory": 3209, "data_time": 0.00419, "loss_cls": 0.57246, "loss_bbox": 0.64803, "num_pos": 3.79, "pos_recall": 84.9132, "loss": 1.22049, "grad_norm": 4.08251, "time": 0.28925}
{"mode": "val", "epoch": 1, "iter": 1912, "lr": 0.01, "bbox_mAP": 0.094, "bbox_mAP_50": 0.309, "bbox_mAP_75": 0.018, "bbox_mAP_s": 0.095, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.094 0.309 0.018 0.095 -1.000 -1.000"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.01, "memory": 3209, "data_time": 0.04758, "loss_cls": 0.51757, "loss_bbox": 0.59548, "num_pos": 4.71, "pos_recall": 87.47737, "loss": 1.11304, "grad_norm": 4.06713, "time": 0.32716}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.01, "memory": 3209, "data_time": 0.00416, "loss_cls": 0.53004, "loss_bbox": 0.61748, "num_pos": 5.26, "pos_recall": 84.31854, "loss": 1.14752, "grad_norm": 4.33762, "time": 0.28413}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.01, "memory": 3209, "data_time": 0.00403, "loss_cls": 0.56527, "loss_bbox": 0.53934, "num_pos": 4.88, "pos_recall": 78.46227, "loss": 1.10461, "grad_norm": 4.11156, "time": 0.2834}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.01, "memory": 3209, "data_time": 0.00402, "loss_cls": 0.53797, "loss_bbox": 0.55252, "num_pos": 4.99, "pos_recall": 83.52921, "loss": 1.09049, "grad_norm": 3.56726, "time": 0.28073}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.01, "memory": 3209, "data_time": 0.0064, "loss_cls": 0.56242, "loss_bbox": 0.55881, "num_pos": 4.92, "pos_recall": 82.29451, "loss": 1.12122, "grad_norm": 3.90492, "time": 0.28824}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.01, "memory": 3209, "data_time": 0.00408, "loss_cls": 0.53454, "loss_bbox": 0.54742, "num_pos": 4.63, "pos_recall": 87.66717, "loss": 1.08196, "grad_norm": 4.01175, "time": 0.28459}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.01, "memory": 3209, "data_time": 0.00423, "loss_cls": 0.48846, "loss_bbox": 0.57419, "num_pos": 4.9, "pos_recall": 83.42613, "loss": 1.06265, "grad_norm": 3.90364, "time": 0.28421}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.01, "memory": 3209, "data_time": 0.00427, "loss_cls": 0.58369, "loss_bbox": 0.76897, "num_pos": 5.15, "pos_recall": 80.35619, "loss": 1.35266, "grad_norm": 4.75492, "time": 0.28536}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.01, "memory": 3209, "data_time": 0.00402, "loss_cls": 0.57666, "loss_bbox": 0.60804, "num_pos": 4.89, "pos_recall": 84.57985, "loss": 1.1847, "grad_norm": 4.70375, "time": 0.28802}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.01, "memory": 3209, "data_time": 0.00414, "loss_cls": 0.57468, "loss_bbox": 0.60545, "num_pos": 5.28, "pos_recall": 83.31758, "loss": 1.18013, "grad_norm": 3.78795, "time": 0.28896}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.01, "memory": 3209, "data_time": 0.00405, "loss_cls": 0.55155, "loss_bbox": 0.59564, "num_pos": 5.16, "pos_recall": 79.37309, "loss": 1.14719, "grad_norm": 4.58422, "time": 0.2871}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.01, "memory": 3209, "data_time": 0.00421, "loss_cls": 0.53364, "loss_bbox": 0.59894, "num_pos": 4.99, "pos_recall": 77.51273, "loss": 1.13258, "grad_norm": 4.11733, "time": 0.28653}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.01, "memory": 3209, "data_time": 0.00419, "loss_cls": 0.55127, "loss_bbox": 0.60123, "num_pos": 4.92, "pos_recall": 77.69942, "loss": 1.15251, "grad_norm": 4.64902, "time": 0.28853}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.01, "memory": 3209, "data_time": 0.00425, "loss_cls": 0.56507, "loss_bbox": 0.57942, "num_pos": 4.63, "pos_recall": 82.83474, "loss": 1.14449, "grad_norm": 4.38952, "time": 0.29133}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.01, "memory": 3209, "data_time": 0.00421, "loss_cls": 0.57119, "loss_bbox": 0.58997, "num_pos": 5.47, "pos_recall": 83.23893, "loss": 1.16116, "grad_norm": 4.8484, "time": 0.28774}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.01, "memory": 3209, "data_time": 0.00421, "loss_cls": 0.55574, "loss_bbox": 0.5582, "num_pos": 4.66, "pos_recall": 83.20891, "loss": 1.11394, "grad_norm": 3.50208, "time": 0.28558}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.01, "memory": 3209, "data_time": 0.0041, "loss_cls": 0.50705, "loss_bbox": 0.61614, "num_pos": 5.38, "pos_recall": 88.32188, "loss": 1.12319, "grad_norm": 3.81765, "time": 0.2853}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.01, "memory": 3209, "data_time": 0.00413, "loss_cls": 0.50045, "loss_bbox": 0.54144, "num_pos": 4.98, "pos_recall": 86.06923, "loss": 1.04188, "grad_norm": 3.80158, "time": 0.28804}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.01, "memory": 3209, "data_time": 0.00733, "loss_cls": 0.43948, "loss_bbox": 0.53707, "num_pos": 5.05, "pos_recall": 89.00366, "loss": 0.97655, "grad_norm": 4.05185, "time": 0.29122}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.01, "memory": 3209, "data_time": 0.00424, "loss_cls": 0.48415, "loss_bbox": 0.5442, "num_pos": 4.52, "pos_recall": 87.24257, "loss": 1.02834, "grad_norm": 4.03288, "time": 0.28845}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.01, "memory": 3209, "data_time": 0.0042, "loss_cls": 0.53997, "loss_bbox": 0.63018, "num_pos": 5.65, "pos_recall": 91.34074, "loss": 1.17015, "grad_norm": 4.10896, "time": 0.28398}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.01, "memory": 3209, "data_time": 0.00416, "loss_cls": 0.55177, "loss_bbox": 0.60846, "num_pos": 5.13, "pos_recall": 80.30159, "loss": 1.16022, "grad_norm": 4.5537, "time": 0.28416}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 0.01, "memory": 3209, "data_time": 0.00423, "loss_cls": 0.50804, "loss_bbox": 0.58489, "num_pos": 5.59, "pos_recall": 86.94517, "loss": 1.09293, "grad_norm": 3.99488, "time": 0.2832}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.01, "memory": 3209, "data_time": 0.00409, "loss_cls": 0.54374, "loss_bbox": 0.66669, "num_pos": 5.47, "pos_recall": 94.53968, "loss": 1.21042, "grad_norm": 4.17709, "time": 0.28278}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 0.01, "memory": 3209, "data_time": 0.01192, "loss_cls": 0.48665, "loss_bbox": 0.67877, "num_pos": 5.23, "pos_recall": 88.21033, "loss": 1.16543, "grad_norm": 4.28706, "time": 0.2915}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 0.01, "memory": 3209, "data_time": 0.09386, "loss_cls": 0.50011, "loss_bbox": 0.54788, "num_pos": 5.22, "pos_recall": 89.62985, "loss": 1.04798, "grad_norm": 3.93888, "time": 0.37497}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 0.01, "memory": 3209, "data_time": 0.00415, "loss_cls": 0.57381, "loss_bbox": 0.55052, "num_pos": 5.06, "pos_recall": 79.39011, "loss": 1.12432, "grad_norm": 4.06402, "time": 0.28366}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 0.01, "memory": 3209, "data_time": 0.00913, "loss_cls": 0.52854, "loss_bbox": 0.56418, "num_pos": 4.73, "pos_recall": 91.07602, "loss": 1.09272, "grad_norm": 5.23618, "time": 0.29038}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 0.01, "memory": 3209, "data_time": 0.00418, "loss_cls": 0.55615, "loss_bbox": 0.62201, "num_pos": 4.76, "pos_recall": 88.58362, "loss": 1.17816, "grad_norm": 4.1341, "time": 0.28499}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.01, "memory": 3209, "data_time": 0.0042, "loss_cls": 0.50559, "loss_bbox": 0.55321, "num_pos": 4.45, "pos_recall": 84.47366, "loss": 1.0588, "grad_norm": 3.89938, "time": 0.28293}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.01, "memory": 3209, "data_time": 0.00439, "loss_cls": 0.45995, "loss_bbox": 0.52566, "num_pos": 4.9, "pos_recall": 90.68655, "loss": 0.98561, "grad_norm": 4.35726, "time": 0.28408}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.01, "memory": 3209, "data_time": 0.00412, "loss_cls": 0.56016, "loss_bbox": 0.65657, "num_pos": 4.62, "pos_recall": 88.73252, "loss": 1.21673, "grad_norm": 5.22287, "time": 0.28386}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.01, "memory": 3209, "data_time": 0.00412, "loss_cls": 0.51421, "loss_bbox": 0.58309, "num_pos": 4.73, "pos_recall": 88.3302, "loss": 1.0973, "grad_norm": 4.39353, "time": 0.28397}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.01, "memory": 3209, "data_time": 0.01188, "loss_cls": 0.52948, "loss_bbox": 0.61165, "num_pos": 4.62, "pos_recall": 85.72576, "loss": 1.14113, "grad_norm": 3.86456, "time": 0.29247}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.01, "memory": 3209, "data_time": 0.0042, "loss_cls": 0.4952, "loss_bbox": 0.59167, "num_pos": 4.88, "pos_recall": 83.2746, "loss": 1.08687, "grad_norm": 3.90261, "time": 0.28223}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.01, "memory": 3209, "data_time": 0.00424, "loss_cls": 0.46876, "loss_bbox": 0.54138, "num_pos": 4.83, "pos_recall": 88.09762, "loss": 1.01014, "grad_norm": 3.63261, "time": 0.28057}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.01, "memory": 3209, "data_time": 0.00409, "loss_cls": 0.54974, "loss_bbox": 0.53918, "num_pos": 5.01, "pos_recall": 79.5532, "loss": 1.08891, "grad_norm": 4.24453, "time": 0.28449}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.01, "memory": 3209, "data_time": 0.00415, "loss_cls": 0.50813, "loss_bbox": 0.58158, "num_pos": 5.37, "pos_recall": 87.89503, "loss": 1.08971, "grad_norm": 4.58548, "time": 0.28724}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.01, "memory": 3209, "data_time": 0.0042, "loss_cls": 0.51792, "loss_bbox": 0.49828, "num_pos": 5.12, "pos_recall": 84.42973, "loss": 1.0162, "grad_norm": 3.78542, "time": 0.2833}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.01, "memory": 3209, "data_time": 0.00783, "loss_cls": 0.53128, "loss_bbox": 0.60254, "num_pos": 5.11, "pos_recall": 85.69481, "loss": 1.13382, "grad_norm": 4.60409, "time": 0.28989}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.01, "memory": 3209, "data_time": 0.00514, "loss_cls": 0.50454, "loss_bbox": 0.60057, "num_pos": 4.46, "pos_recall": 88.21203, "loss": 1.10511, "grad_norm": 4.7517, "time": 0.28309}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.01, "memory": 3209, "data_time": 0.00418, "loss_cls": 0.50755, "loss_bbox": 0.60912, "num_pos": 4.86, "pos_recall": 89.51429, "loss": 1.11667, "grad_norm": 3.65577, "time": 0.28241}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.01, "memory": 3209, "data_time": 0.00435, "loss_cls": 0.53649, "loss_bbox": 0.56608, "num_pos": 4.68, "pos_recall": 85.65716, "loss": 1.10257, "grad_norm": 4.06152, "time": 0.28415}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.01, "memory": 3209, "data_time": 0.00417, "loss_cls": 0.4789, "loss_bbox": 0.5946, "num_pos": 4.84, "pos_recall": 85.11472, "loss": 1.0735, "grad_norm": 3.61595, "time": 0.27776}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 0.01, "memory": 3209, "data_time": 0.00429, "loss_cls": 0.48374, "loss_bbox": 0.59547, "num_pos": 5.03, "pos_recall": 88.87524, "loss": 1.07921, "grad_norm": 3.91098, "time": 0.2826}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 0.01, "memory": 3209, "data_time": 0.01388, "loss_cls": 0.50315, "loss_bbox": 0.58136, "num_pos": 4.82, "pos_recall": 81.80249, "loss": 1.08451, "grad_norm": 3.69953, "time": 0.29286}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 0.01, "memory": 3209, "data_time": 0.00424, "loss_cls": 0.53273, "loss_bbox": 0.61331, "num_pos": 4.96, "pos_recall": 88.82804, "loss": 1.14604, "grad_norm": 4.09643, "time": 0.28487}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 0.01, "memory": 3209, "data_time": 0.0042, "loss_cls": 0.53666, "loss_bbox": 0.61325, "num_pos": 4.76, "pos_recall": 76.8765, "loss": 1.14991, "grad_norm": 4.137, "time": 0.28795}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 0.01, "memory": 3209, "data_time": 0.00436, "loss_cls": 0.48667, "loss_bbox": 0.54797, "num_pos": 4.56, "pos_recall": 88.65961, "loss": 1.03463, "grad_norm": 3.84635, "time": 0.28726}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 0.01, "memory": 3209, "data_time": 0.00434, "loss_cls": 0.48195, "loss_bbox": 0.53845, "num_pos": 4.87, "pos_recall": 88.60606, "loss": 1.0204, "grad_norm": 4.53785, "time": 0.28297}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 0.01, "memory": 3209, "data_time": 0.00425, "loss_cls": 0.54009, "loss_bbox": 0.6139, "num_pos": 4.89, "pos_recall": 85.92381, "loss": 1.15399, "grad_norm": 4.50799, "time": 0.28573}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 0.01, "memory": 3209, "data_time": 0.00423, "loss_cls": 0.56088, "loss_bbox": 0.61419, "num_pos": 5.0, "pos_recall": 82.89511, "loss": 1.17507, "grad_norm": 4.10031, "time": 0.28663}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 0.01, "memory": 3209, "data_time": 0.00407, "loss_cls": 0.48469, "loss_bbox": 0.5596, "num_pos": 4.79, "pos_recall": 91.16587, "loss": 1.04429, "grad_norm": 3.89304, "time": 0.287}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 0.01, "memory": 3209, "data_time": 0.00432, "loss_cls": 0.53938, "loss_bbox": 0.72194, "num_pos": 4.44, "pos_recall": 83.44762, "loss": 1.26132, "grad_norm": 5.58314, "time": 0.28619}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 0.01, "memory": 3209, "data_time": 0.00412, "loss_cls": 0.61445, "loss_bbox": 0.75857, "num_pos": 4.61, "pos_recall": 85.67729, "loss": 1.37302, "grad_norm": 5.7595, "time": 0.28777}
{"mode": "val", "epoch": 2, "iter": 1912, "lr": 0.01, "bbox_mAP": 0.105, "bbox_mAP_50": 0.288, "bbox_mAP_75": 0.043, "bbox_mAP_s": 0.106, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.105 0.288 0.043 0.106 -1.000 -1.000"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.01, "memory": 3209, "data_time": 0.0475, "loss_cls": 0.50353, "loss_bbox": 0.783, "num_pos": 4.32, "pos_recall": 84.12771, "loss": 1.28654, "grad_norm": 4.85743, "time": 0.32803}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.01, "memory": 3209, "data_time": 0.00433, "loss_cls": 0.46948, "loss_bbox": 0.68602, "num_pos": 4.57, "pos_recall": 81.55175, "loss": 1.15551, "grad_norm": 4.73602, "time": 0.28185}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.01, "memory": 3209, "data_time": 0.00429, "loss_cls": 0.45945, "loss_bbox": 0.62136, "num_pos": 4.8, "pos_recall": 86.04152, "loss": 1.08081, "grad_norm": 4.58912, "time": 0.28308}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.01, "memory": 3209, "data_time": 0.00423, "loss_cls": 0.52483, "loss_bbox": 0.66716, "num_pos": 4.57, "pos_recall": 86.86162, "loss": 1.19199, "grad_norm": 4.89535, "time": 0.28534}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.01, "memory": 3209, "data_time": 0.00413, "loss_cls": 0.52617, "loss_bbox": 0.59033, "num_pos": 4.52, "pos_recall": 88.16687, "loss": 1.1165, "grad_norm": 4.57305, "time": 0.28366}
